(function(window,undefined){"use strict";if(!String.prototype.trim){(function(){var rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;String.prototype.trim=function(){return this.replace(rtrim,"")}})()}if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement,fromIndex){var k;if(this==null){throw new TypeError('"this" is null or not defined')}var O=Object(this);var len=O.length>>>0;if(len===0){return-1}var n=+fromIndex||0;if(Math.abs(n)===Infinity){n=0}if(n>=len){return-1}k=Math.max(n>=0?n:len-Math.abs(n),0);while(k<len){if(k in O&&O[k]===searchElement){return k}k++}return-1}}})(window);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login.affiliate",[]).controller("affiliateLoginController",function($scope,authService){$scope.form={};$scope.submit=function(){var formFields={username:$scope.form.username,password:$scope.form.password};$scope.errorFlag=false;authService.login("affiliates",formFields).then(function(){$scope.$emit("login.affiliate:success")},function(err){$scope.errorFlag=true;$scope.$emit("login.affiliate:failure",err)})}}).controller("affiliatePasswordReminderController",function($scope,authService){$scope.form={};$scope.submit=function(){$scope.errorFlag=false;authService.sendPasswordReminder("affiliates",$scope.form.email).then(function(){$scope.$emit("passwordSent.affiliate:success",{email:$scope.form.email})},function(err){$scope.errorFlag=true;$scope.errorMessage=err.error})}}).controller("affiliatePasswordResetController",function($scope,authService){$scope.form={};$scope.submit=function(){$scope.errorMessages={};authService.resetPassword("affiliates",$scope.form).then(function(){$scope.$emit("passwordReset.affiliate:success")},function(err){$scope.errorFlag=true;$scope.errorMessages=err.errors})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login.candidate",[]).controller("candidateLoginController",function($scope,authService,sessionUserLevel,candidateProfileDataService){$scope.form={};if("LEVEL_ONE"===sessionUserLevel){candidateProfileDataService.get().then(function(response){$scope.form.username=response.email})}$scope.submit=function(){var formFields={username:$scope.form.username,password:$scope.form.password,remember_me:$scope.form.rememberMe};$scope.errorFlag=false;authService.login("candidates",formFields).then(function(){$scope.$emit("login.candidate:success")},function(){$scope.errorFlag=true;$scope.$emit("login.candidate:failure")})}}).controller("candidatePasswordReminderController",function($scope,authService){$scope.form={};$scope.submit=function(){$scope.errorFlag=false;authService.sendPasswordReminder("candidates",$scope.form.email).then(function(data){if(true===data.success){$scope.$emit("passwordSent.candidate:success",{email:$scope.form.email})}else{$scope.errorFlag=true;$scope.$emit("passwordSent.candidate:failure")}})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login.courseOrganiser",[]).controller("courseOrganiserLoginController",function($scope,authService){$scope.form={};$scope.submit=function(){var formFields={username:$scope.form.username,password:$scope.form.password};$scope.hasError=false;authService.login("course-organisers",formFields).then(function(){$scope.$emit("login.courseOrganiser:success")},function(err){$scope.hasError=true;$scope.$emit("login.courseOrganiser:failure",err)})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login.employer",[]).controller("employerLoginController",function($scope,authService){var loginInProgress=false;$scope.form={};$scope.submit=function(){var formFields={username:$scope.form.username,password:$scope.form.password},errorMessageMap={INVALID_LOGIN:"Please make sure you are entering "+"your full email (e.g. john@abc.com) "+"and correct password",ACCOUNT_IN_USE:"Sorry. You can not login because this "+"account is being used by another user.",NO_EMPLOYERS_AVAILABLE:"Sorry, the maximum number of "+"concurrent users has been reached.",NO_EMPLOYERS:"Sorry no employer account is currently assigned "+"to your username.",ACCOUNT_BLOCKED:"Your account has been blocked, "+"please refer to email sent to your registered email-id"};if(true===loginInProgress){return}loginInProgress=true;$scope.errorFlag=false;authService.login("employers",formFields).then(function(response){$scope.$emit("login.employer:success",response)},function(err){$scope.errorFlag=true;$scope.errorMessage=errorMessageMap[err.reason];$scope.$emit("login.employer:failure",err);loginInProgress=false})}}).controller("employerPasswordReminderController",function($scope,authService){$scope.form={};$scope.submit=function(){$scope.errorFlag=false;authService.sendPasswordReminder("employers",$scope.form.email).then(function(data){if(true===data.success){$scope.$emit("passwordSent.employer:success",{email:$scope.form.email})}else{$scope.errorFlag=true;$scope.$emit("passwordSent.employer:failure")}})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login.loginType",[]).controller("loginTypeChoiceController",function($scope,gtStorageService){$scope.selectType=function(type){gtStorageService.setItem("user","seenAccountTypeChoice",true);$scope.$emit("login.type:selected",type)}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.ads",[]).factory("gtDfpService",function($window,$document,$timeout,$q,$log){var googletag,script,currAdIndex=0,slots={},dfpNetworkId=1011323,pubadsTimeout=5e3,hasPubadsDetectionStarted=false,isPubadsActiveDeferred=$q.defer(),isPubadsResolved=false,isPubadsActive=true;if(!$window.googletag){$window.googletag={}}googletag=$window.googletag;if(!googletag.cmd){googletag.cmd=[]}script=$document[0].createElement("script");script.src="https://www.googletagservices.com/tag/js/gpt.js";script.async=1;$document.ready(function(){$document.find("head").append(script)});function getNewAdIndex(){var adIndex=currAdIndex;currAdIndex+=1;return adIndex}function onDisplaySlotCalled(){var pubadsTimeoutPromise;if(hasPubadsDetectionStarted){return}hasPubadsDetectionStarted=true;pubadsTimeoutPromise=$timeout(function onPubadsTimeout(){if(isPubadsResolved){return}isPubadsResolved=true;isPubadsActive=false;googletag.cmd.push(function(){googletag.pubads().clear()});isPubadsActiveDeferred.reject("Pubads timed out.");$log.warn("Pubads timed out.")},pubadsTimeout);googletag.cmd.push(function(){googletag.pubads().addEventListener("slotOnload",function onSlotOnload(){if(isPubadsResolved){return}isPubadsResolved=true;$timeout.cancel(pubadsTimeoutPromise);isPubadsActiveDeferred.resolve(true)})})}return{createSlot:function createSlot(name,width,height){var id=["div-gpt-ad",Date.now(),getNewAdIndex()].join("-");googletag.cmd.push(function(){slots[id]=googletag.defineSlot("/"+dfpNetworkId+"/"+name,[width,height],id).addService(googletag.pubads());googletag.pubads().enableSingleRequest();googletag.enableServices()});return id},displaySlot:function displaySlot(id){if(slots[id]||!isPubadsActive){return}onDisplaySlotCalled(id);googletag.cmd.push(function(){googletag.display(id)})},refreshSlot:function refreshSlot(id){if(!slots[id]||!isPubadsActive){return}googletag.cmd.push(function(){googletag.pubads().refresh([slots[id]])})},getStatus:function(){return isPubadsActiveDeferred.promise}}}).directive("gtAd",function($timeout,$log,gtDfpService){return{template:"<div>"+'<div id="{{ id }}"></div>'+'<a ng-href="{{ fallbackUrl }}" ng-show="isFallbackActive">'+'<img ng-src="{{ fallbackMedia }}" />'+"</a>"+"</div>",scope:{},link:function(scope,element,attrs){var width=+attrs.gtAdWidth,height=+attrs.gtAdHeight,name=attrs.gtAdName,fallbackMedia=attrs.gtAdFallbackMedia,fallbackUrl=attrs.gtAdFallbackUrl,hasFallback=fallbackMedia&&fallbackUrl;if(!width||!height||!name){$log.error("gtAd requires width, height and name");return}if(attrs.gtAdRefreshOn){angular.forEach(attrs.gtAdRefreshOn.split(" "),function(eventName){scope.$on(eventName,refresh)})}scope.id=gtDfpService.createSlot(name,width,height);scope.isFallbackActive=false;$timeout(function(){gtDfpService.displaySlot(scope.id)});gtDfpService.getStatus().then(null,function(){if(hasFallback){scope.isFallbackActive=true;scope.fallbackMedia=fallbackMedia;scope.fallbackUrl=fallbackUrl}});function refresh(){gtDfpService.refreshSlot(scope.id)}}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.bootstrap",["ui.bootstrap"]).config(function($provide){$provide.decorator("typeaheadDirective",function($delegate,$compile,$parse,$q,$timeout,$document,$position,typeaheadParser){var directive=$delegate[0],HOT_KEYS=[9,13,27,38,40];directive.compile=function(){return function(originalScope,element,attrs,modelCtrl){var minSearch="0"===attrs.typeaheadMinLength?0:originalScope.$eval(attrs.typeaheadMinLength)||1,waitTime=originalScope.$eval(attrs.typeaheadWaitMs)||0,isEditable=false!==originalScope.$eval(attrs.typeaheadEditable),isLoadingSetter=$parse(attrs.typeaheadLoading).assign||angular.noop,onSelectCallback=$parse(attrs.typeaheadOnSelect),inputFormatter=attrs.typeaheadInputFormatter?$parse(attrs.typeaheadInputFormatter):undefined,appendToBody=attrs.typeaheadAppendToBody?$parse(attrs.typeaheadAppendToBody):false,$setModelValue=$parse(attrs.ngModel).assign,parserResult=typeaheadParser.parse(attrs.typeahead),focusFirst=originalScope.$eval(attrs.typeaheadFocusFirst)||false,typeaheadClass=attrs.typeaheadClass||"",typeaheadOnClick=originalScope.$eval(attrs.typeaheadOnClick)||false,popUpEl=angular.element('<div typeahead-popup class="'+typeaheadClass+'"></div>'),scope=originalScope.$new(),typeaheadSplitOn=attrs.typeaheadSplitOn||"",asyncMatchCount=0,timeoutPromise,hasFocus,$popup;popUpEl.attr({matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query",position:"position"});if(angular.isDefined(attrs.typeaheadTemplateUrl)){popUpEl.attr("template-url",attrs.typeaheadTemplateUrl)}originalScope.$on("$destroy",function(){scope.$destroy()});resetMatches();scope.query=undefined;modelCtrl.$parsers.unshift(parser);modelCtrl.$formatters.push(formatter);scope.select=function(activeIdx){var locals={},viewValue=modelCtrl.$viewValue,model,item,splitBoundaries,modelValue;locals[parserResult.itemName]=item=scope.matches[activeIdx].model;model=parserResult.modelMapper(originalScope,locals);modelValue=model;if(typeaheadSplitOn&&viewValue){splitBoundaries=getCurrSplitBoundaries(modelCtrl.$viewValue,typeaheadSplitOn);modelValue=viewValue.substring(0,splitBoundaries.start)+model+viewValue.substring(splitBoundaries.end)}$setModelValue(originalScope,modelValue);modelCtrl.$setValidity("editable",true);onSelectCallback(originalScope,{$item:item,$model:model,$label:parserResult.viewMapper(originalScope,locals)});resetMatches();element[0].focus()};element.bind("keydown",keydownHandler);element.bind("blur",blurHandler);element.bind("click",clickHandler);$document.bind("click",dismissClickHandler);originalScope.$on("$destroy",function(){$document.unbind("click",dismissClickHandler)});$popup=$compile(popUpEl)(scope);if(appendToBody){$document.find("body").append($popup)}else{element.after($popup)}function parser(inputValueArg){var inputValue=inputValueArg,splitBoundaries;hasFocus=true;if(inputValueArg&&typeaheadSplitOn){splitBoundaries=getCurrSplitBoundaries(inputValueArg,typeaheadSplitOn);inputValue=inputValueArg.substring(splitBoundaries.start,splitBoundaries.end).trim()}if((inputValue||""===inputValue)&&inputValue.length>=minSearch){if(0<waitTime){if(timeoutPromise){$timeout.cancel(timeoutPromise)}timeoutPromise=$timeout(function(){asyncMatchCount+=1;getMatchesAsync(inputValue,asyncMatchCount)},waitTime)}else{asyncMatchCount+=1;getMatchesAsync(inputValue,asyncMatchCount)}}else{isLoadingSetter(originalScope,false);resetMatches()}if(isEditable){return inputValueArg}if(!inputValue){modelCtrl.$setValidity("editable",true);return inputValueArg}modelCtrl.$setValidity("editable",false);return undefined}function getCurrSplitBoundaries(inputValue,splitCharacter){var cursorPosition=element[0].selectionStart,prevSplit,nextSplit;if("string"!==typeof inputValue){throw new Error("inputValue parameter should be a string!")}if(!splitCharacter){return{start:0,end:inputValue.length}}prevSplit=inputValue.lastIndexOf(splitCharacter,cursorPosition-1);nextSplit=inputValue.indexOf(splitCharacter,cursorPosition);return{start:prevSplit+1,end:-1===nextSplit?inputValue.length:nextSplit}}function formatter(modelValue){var candidateViewValue,emptyViewValue,locals={};if(inputFormatter){locals.$model=modelValue;return inputFormatter(originalScope,locals)}locals[parserResult.itemName]=modelValue;candidateViewValue=parserResult.viewMapper(originalScope,locals);locals[parserResult.itemName]=undefined;emptyViewValue=parserResult.viewMapper(originalScope,locals);return candidateViewValue===emptyViewValue?modelValue:candidateViewValue}function blurHandler(){hasFocus=false}function clickHandler(){var viewValue=modelCtrl.$viewValue||"";if(!typeaheadOnClick)return;scope.$apply(function(){modelCtrl.$setViewValue(viewValue)})}function keydownHandler(evt){if(0===scope.matches.length||-1===HOT_KEYS.indexOf(evt.which)){return}if(-1===scope.activeIdx&&(13===evt.which||9===evt.which)){return}evt.preventDefault();if(40===evt.which){scope.activeIdx=(scope.activeIdx+1)%scope.matches.length;scope.$digest()}else if(38===evt.which){scope.activeIdx=(scope.activeIdx?scope.activeIdx:scope.matches.length)-1;scope.$digest()}else if(13===evt.which||9===evt.which){scope.$apply(function(){scope.select(scope.activeIdx)})}else if(27===evt.which){evt.stopPropagation();resetMatches();scope.$digest()}}function dismissClickHandler(evt){if(element[0]!==evt.target){resetMatches();scope.$digest()}}function resetMatches(){scope.matches=[];scope.activeIdx=-1}function getMatchesAsync(inputValue,matchRequestId){var locals={$viewValue:inputValue};isLoadingSetter(originalScope,true);$q.when(parserResult.source(originalScope,locals)).then(function(matches){var i;if(matchRequestId===asyncMatchCount&&""!==modelCtrl.$viewValue&&hasFocus){if(0<matches.length){scope.activeIdx=focusFirst?0:-1;scope.matches.length=0;for(i=0;i<matches.length;i++){locals[parserResult.itemName]=matches[i];scope.matches.push({label:parserResult.viewMapper(scope,locals),model:matches[i]})}scope.query=inputValue;scope.position=appendToBody?$position.offset(element):$position.position(element);scope.position.top+=element.prop("offsetHeight")}else{resetMatches()}isLoadingSetter(originalScope,false)}},function(){resetMatches();isLoadingSetter(originalScope,false)})}}};return $delegate});$provide.decorator("paginationDirective",function($delegate,paginationConfig){var directive=$delegate[0],link=directive.link;directive.compile=function(){return function(scope,element,attrs,paginationCtrl){var getPagesParentFunction;link.apply(null,arguments);getPagesParentFunction=paginationCtrl.getPages;paginationCtrl.getPages=function(currentPage,totalPages){var pages=getPagesParentFunction(currentPage,totalPages);if(!this.getAttributeValue(attrs.boundaryLinks)){if(this.getAttributeValue(attrs.boundaryLinkFirst)){pages.unshift({number:1,text:this.getAttributeValue(attrs.firstText,paginationConfig.firstText,true),active:false,disabled:this.noPrevious()})}if(this.getAttributeValue(attrs.boundaryLinkLast)){pages.push({number:totalPages,text:this.getAttributeValue(attrs.lastText,paginationConfig.lastText,true),active:false,disabled:this.noNext()})}}return pages}}};return $delegate})})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.bridge",[]).config(function($httpProvider,gtClient){$httpProvider.defaults.headers.common["X-GT-Client"]=gtClient}).directive("gtModelValue",function($timeout){return{require:"?ngModel",link:function(scope,element,attrs,ngModel){var repeatCount=8,events=["keyup","change"];if(!ngModel)return;if("radio"===attrs.type&&!("checked"in attrs))return;if("radio"!==attrs.type){ngModel.$render=function(){element.val(ngModel.$viewValue)}}if("radio"!==attrs.type){events.push("blur")}element.bind(events.join(" "),function(){scope.$apply(read)});syncAutofill();function syncAutofill(){read();repeatCount-=1;if(0<repeatCount){$timeout(syncAutofill,250)}}function read(){ngModel.$setViewValue(element.val())}}}}).directive("gtConfirm",function($window){return{restrict:"A",scope:{message:"@",actionYes:"&",actionNo:"&"},link:function(scope,element){element.bind("click",function(evt){evt.preventDefault();if(true===$window.confirm(scope.message)){scope.actionYes()}else{scope.actionNo()}})}}}).directive("gtCloseWindow",function($window){return{link:function(scope,element){element.bind("click",function(){$window.close()})}}}).directive("gtCloseParentWindow",function($window){return{link:function(scope,element){element.bind("click",function(){$window.parent.close()})}}}).directive("gtPrint",function($window,$timeout){return{link:function(scope,element,attrs){element.bind("click",function(evt){evt.preventDefault();scope.$apply(function(){scope.$eval(attrs.gtPrintBefore);$timeout(function(){$window.print()})})})}}}).directive("gtSubmit",function($timeout){return{priority:-1e3,link:function(scope,element,attrs){var evtNames=attrs.gtSubmitOn&&attrs.gtSubmitOn.split(" ")||[];element.bind("submit",submitForm);evtNames.push("gtSubmit."+attrs.name+":submit");angular.forEach(evtNames,function(eventName){scope.$on(eventName,function(){$timeout(function(){if(undefined===attrs.gtSubmitOnEventful){element[0].submit()}else{element[0].dispatchEvent(new Event("submit"))}})})});function submitForm(evt){if(true===evt.gtIsImmediatePropagationStopped){return}if(""===attrs.gtSubmit){element[0].submit()}else{scope.$eval(attrs.gtSubmit)}}}}}).directive("gtGaTrackEvent",function(gtGAService){return{scope:false,link:function(scope,element,attrs){element.bind(attrs.gtGaTrackEvent,function(evt){if(true===evt.gtIsImmediatePropagationStopped){return}scope.$apply(function(){gtGAService.trackEvent(attrs.gtGaTrackEventCategory,scope.$eval(attrs.gtGaTrackEventAction),scope.$eval(attrs.gtGaTrackEventLabel),attrs.gtGaTrackEventValue,attrs.gtGaTrackEventNonInteraction)})})}}}).constant("dataService",{urlEncodeData:function(object,rootKey){var self=this;return Object.keys(object).reduce(flattenObject,[]).join("&");function flattenObject(result,key){var value=object[key];if(value instanceof Object){result.push(self.urlEncodeData(value,serializeKey(key,rootKey)))}else if(undefined!==value&&null!==value){result.push(encodeURIComponent(serializeKey(key,rootKey))+"="+encodeURIComponent(value))}return result}function serializeKey(key,rootKeyArg){return rootKeyArg?rootKeyArg+"["+key+"]":key}}}).factory("urlService",function(dataService){var urlService={addSearchParams:function(url,params){var parsedUrl=urlService.parse(url);parsedUrl.search=urlService.addParamsToSearchString(parsedUrl.search,params);return urlService.createFromObject(parsedUrl)},addParamsToSearchString:function(search,params){var urlParamsAppendChar=0<=search.indexOf("?")?"&":"?";if("object"!==typeof params||0>=Object.keys(params).length){return search}return search+urlParamsAppendChar+dataService.urlEncodeData(params)},parse:function(url){var parser=angular.element("<a></a>")[0];parser.href=url;return{protocol:parser.protocol,host:parser.host,hostname:parser.hostname,port:parser.port,pathname:parser.pathname,search:parser.search,hash:parser.hash}},createFromObject:function(parsedUrl){return parsedUrl.protocol+"//"+parsedUrl.hostname+parsedUrl.port+parsedUrl.pathname+parsedUrl.search+parsedUrl.hash}};return urlService}).factory("browserFeatureDetector",function($document,$window){var cssFeatures={};return{isCSSFeatureEnabled:function(featureNameArg){var isDetected=false,domPrefixes="Webkit Moz ms O".split(" "),element=$document[0].createElement("div"),featureName=featureNameArg.toLowerCase(),featureNameCapital,i,l;isDetected=element.style[featureName]!==undefined;if(!isDetected){featureNameCapital=featureName.charAt(0).toUpperCase()+featureName.substr(1);for(i=0,l=domPrefixes.length;i<l;i+=1){if(undefined!==element.style[domPrefixes[i]+featureNameCapital]){isDetected=true;break}}}cssFeatures[featureName]=isDetected;return isDetected},isCanvasSupported:function(){var canvasElement=$document[0].createElement("canvas");return!!(canvasElement.getContext&&canvasElement.getContext("2d"))},isFileApiSupported:function(){return!!($window.File&&$window.FileList&&$window.FileReader)}}}).directive("gtModelFile",function(){return{priority:1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){element.bind("change",function(){scope.$apply(function(){ngModel.$setViewValue(element[0].files)})})}}}).factory("gtFileUploadService",function($upload){return{postFile:function(files,url){return $upload.upload({url:url,params:{_method:"put"},file:files[0],transformRequest:angular.identity,headers:{"Content-Type":undefined}})}}}).directive("gtLogActionClick",function(gtLogService){var logData;return{link:function(scope,element,attrs){logData={category:attrs.logCategory,action:attrs.logAction,label:attrs.logLabel,label_map:attrs.logLabelMap};element.bind("click",function(){scope.$apply(function(){gtLogService.logEvent(logData,"/api/logs/generic")})})}}}).factory("gtStorageService",function($window,$rootScope){var domain="gt",storage=$window.localStorage;angular.element($window).bind("storage",function(evtArg){var evt=evtArg.originalEvent||evtArg;$rootScope.$broadcast("storage.key:changed",evt)});return{setItem:function(namespace,id,valueArg){var value=valueArg instanceof Object?JSON.stringify(valueArg):String(valueArg);if(storage){storage.setItem(getKey(namespace,id),value)}},getItem:function(namespace,id){var value,parsedValue;if(!storage){return null}value=storage.getItem(getKey(namespace,id));try{parsedValue=JSON.parse(value)}catch(error){return value}if(parsedValue instanceof Object){return parsedValue}return value},removeItem:function(namespace,id){if(storage){storage.removeItem(getKey(namespace,id))}},exists:function(namespace,id){return!!this.getItem(namespace,id)}};function getKey(namespace,id){return[domain,namespace,id].join(":")}}).factory("gtImageProcessingService",function($window,$q){return{convertImgToBase64URL:function(url,outputFormat){var img=new Image,deferred=$q.defer();img.onload=function(){var canvas=$window.document.createElement("CANVAS"),ctx=canvas.getContext("2d"),dataURL;canvas.height=this.height;canvas.width=this.width;ctx.drawImage(this,0,0);dataURL=canvas.toDataURL(outputFormat);canvas=null;deferred.resolve(dataURL)};img.src=url;return deferred.promise}}}).factory("gtGAService",function($window){return{trackPage:function(url){$window._gaq.push(["_trackPageview",url])},trackEvent:function(category,action,label,value,noninteraction){$window._gaq.push(["_trackEvent",category,action,label,value,noninteraction])}}}).factory("gtTaboolaService",function($document,$location){return{trackEvent:function(eventName,pageUrlArg){var pageUrl=pageUrlArg||$location.absUrl(),trackingUrl="//trc.taboola.com/gulftalentfz-sc/log/3/action"+"?name="+eventName+"&item-url"+encodeURIComponent(pageUrl);$document.append('<img src="'+trackingUrl+'" width="0" height="0" />')}}}).directive("gtTaboolaTrackEvent",function(gtTaboolaService,$log){return{scope:false,link:function(scope,element,attrs){var taboolaEventName=attrs.gtTaboolaTrackEventName;if(!taboolaEventName){$log.warn("gt-taboola-track-event-name not specified. Tracking abandoned.");return}gtTaboolaService.trackEvent(taboolaEventName)}}}).factory("gtCookieService",function($document){return{setCookie:function(cookieName,cookieValue,expiryDate,cookiePath){$document[0].cookie=cookieName+"="+cookieValue+";"+" expires="+expiryDate.toUTCString()+";"+" path="+cookiePath},getCookie:function(cookieName){var cookieArray=$document[0].cookie.split(";"),cookieValue;angular.forEach(cookieArray,function(cookie){if(cookieName===cookie.split("=")[0].trim()){cookieValue=cookie.split("=")[1]}});return cookieValue}}}).factory("employerSwitchService",function($rootScope,$timeout,sessionUserType,gtStorageService,flashBag){$rootScope.$on("storage.key:changed",function(evt,data){if("gt:employer:id"===data.key&&(data.oldValue&&data.newValue&&data.oldValue!==data.newValue)){}});if("employer"!==sessionUserType){remove()}function remove(){gtStorageService.removeItem("employer","id")}return{set:function(employerId){var storageEmployerId=gtStorageService.getItem("employer","id");if(storageEmployerId!==String(employerId)){gtStorageService.setItem("employer","id",employerId);if(storageEmployerId){flashBag.add("success","You have successfully switched accounts.")}}},remove:remove}}).directive("gtBroadcastOnClick",function($rootScope){return{link:function(scope,element,attrs){element.bind("click",function(){if(attrs.gtBroadcastOnClick){angular.forEach(attrs.gtBroadcastOnClick.split(" "),function(eventName){$rootScope.$broadcast(eventName)})}})}}}).directive("gtRedirectOn",function($window){return{link:function(scope,element,attrs){if(attrs.gtRedirectOn){angular.forEach(attrs.gtRedirectOn.split(" "),function(eventName){scope.$on(eventName,function(evt){evt.preventDefault();$window.location.href=attrs.redirectPath})})}}}}).directive("gtImageFile",function($rootScope,gtModal){var maxFileSizeInMb=3;return{scope:{image:"="},priority:1e3,link:function(scope,element,attrs){var imageTypeMap={jpeg:"image/jpeg",jpg:"image/jpeg",png:"image/png"};element.bind("change",function(evt){var reader=new FileReader,validImageTypes=[];validImageTypes=attrs.gtImageFileMime.split(" ");reader.onload=function(onloadEvt){scope.$apply(function(){if(!isValidMimeType(reader.result,validImageTypes)){openInvalidFileModal("Please select a file of valid extension (one of "+validImageTypes.join(", ").toUpperCase()+")");return}if(!isValidSize(onloadEvt.loaded)){openInvalidFileModal("Please select a file smaller than "+maxFileSizeInMb+" MB");return}scope.image=reader.result;$rootScope.$broadcast("widget.cvPhoto:changed")})};if(evt.target.files[0]){reader.readAsDataURL(evt.target.files[0])}function isValidSize(size){return size<maxFileSizeInMb*1024*1024}function isValidMimeType(dataUrl,validImageTypesArg){var isValidMime=false,fileMime,fileMimeRegex=/^data:(.*?)(?:;base64)?,/;fileMime=fileMimeRegex.exec(dataUrl)[1];angular.forEach(validImageTypesArg,function(type){if(imageTypeMap[type]===fileMime){isValidMime=true}});return isValidMime}function openInvalidFileModal(message){gtModal.open({title:"Please confirm",type:"alert",message:message,templateName:"popupBox",windowClass:"modal-alert"})}})}}}).factory("gtPromiseService",function($q){return{wrapResourceCall:function(resource,method,params){var deferred=$q.defer();resource[method](params,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}}).factory("asyncBackendValues",function($q,$interval,$window){return{get:function(value){var deferred=$q.defer(),maxIterations=3e3,intervalPromise=$interval(function(){if(undefined!==$window[value]){deferred.resolve($window[value]);$interval.cancel(intervalPromise)}},0,maxIterations);intervalPromise.then(function(){deferred.reject()});return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.checkout",[]).value("checkoutPublicKey","").factory("checkoutModalService",function($window,$http,$q,checkoutPublicKey,$rootScope,gtLogService,backendValues){var Checkout=$window.Checkout,loggingData={};if(undefined!==Checkout){Checkout.addEventHandler(Checkout.Events.LIGHTBOX_ACTIVATED,function(){angular.extend(loggingData,{stage:"After the modal opened successfully"});logCheckoutErrors(loggingData)});Checkout.addEventHandler(Checkout.Events.LIGHTBOX_DEACTIVATED,function(){angular.extend(loggingData,{stage:"The modal is closed"});logCheckoutErrors(loggingData)})}function logCheckoutErrors(loggingDataArg){gtLogService.logEvent(loggingDataArg,"/api/logs/checkout")}return{open:function(transactionData){if(undefined!==transactionData.token){return openCheckoutModal(transactionData.token)}return $http.post("/api/payments/checkout/tokens",transactionData).then(function(response){var data=response.data;if(!data.success){return $q.reject(response)}return openCheckoutModal(data.payment_token)});function openCheckoutModal(token){var deferred=$q.defer(),payableAmount=0===transactionData.product_quantity&&transactionData.dummyPaymentAmount?transactionData.dummyPaymentAmount:transactionData.price,currencySubunits=undefined===transactionData.currency_subunits?100:transactionData.currency_subunits;Checkout.addEventHandler(Checkout.Events.CARD_CHARGED,function(evt){$rootScope.$apply(function(){if("10000"===evt.data.responseCode){deferred.resolve(evt)}else{deferred.reject(evt)}})});loggingData={user_id:transactionData.user_id,token:token,stage:"Before opening checkout modal",amount:payableAmount,currency:transactionData.currency,product_id:transactionData.product_id,product_description:transactionData.product_description,path:transactionData.path};logCheckoutErrors(gtLogService,loggingData);try{Checkout.configure({publicKey:checkoutPublicKey,currency:transactionData.currency,useCurrencyCode:true,paymentToken:token,value:Number(payableAmount)*currencySubunits,customerEmail:transactionData.email,paymentMode:"card",title:"Debit and Credit cards accepted",forceMobileRedirect:false,subtitle:"Payment is powered by Checkout",styling:{themeColor:"#DDDDDD",formButtonColor:"#E0082A",overlayShade:"dark"},logoUrl:backendValues.checkoutLogoUrl});Checkout.open()}catch(error){angular.extend(loggingData,{stage:"While opening checkout modal",error_description:error.message});logCheckoutErrors(gtLogService,loggingData);deferred.reject(error.message)}return deferred.promise}}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.filters",[]).filter("split",function(){return function(input,splitArg){var split=splitArg||",";return input.split(split)}}).filter("first",function(){return function(input){return input[0]}}).filter("slice",function(){return function(array,start,end){return array.slice(start,end)}}).filter("removeFalsy",function(){return function(input){var output=[];if(!angular.isArray(input)){return input}angular.forEach(input,function(value){if(value){output.push(value)}});return output}}).filter("unique",function(){return function(input){var output=[],seen={};if(!angular.isArray(input)){return input}angular.forEach(input,function(value){if(undefined===seen[value]){seen[value]=true;output.push(value)}});return output}}).filter("gtLimitToLastSelected",function(){return function(input,defaultLimit,overrideFilter,overrideLimit,filterLimitMargin){var filtered=[],limit=defaultLimit,l=input.length,lastSelected,i,item;for(i=0;i<l;i++){item=input[i];if(item.selected){lastSelected=i+1}filtered.push(item)}if(undefined!==overrideLimit&&null!==overrideLimit&&"all"!==overrideLimit){return filtered.slice(0,overrideLimit)}if(true===overrideFilter||lastSelected===l||"all"===overrideLimit){return filtered}if(lastSelected<=defaultLimit||undefined===lastSelected){limit=defaultLimit}if(lastSelected>defaultLimit){limit=lastSelected}if(limit+filterLimitMargin>=filtered.length){limit=filtered.length}return filtered.slice(0,limit)}}).filter("equals",function($filter,$parse){return function(array,expression){return $filter("filter")(array,function(item){var isEqual=true;angular.forEach(expression,function(value,key){var getter=$parse(key);if(!angular.equals(getter(item),value)){isEqual=false}});return isEqual})}}).filter("capitalize",function(){return function(input){var output;if(null!==input){output=String(input).toLowerCase();return output.substring(0,1).toUpperCase()+output.substring(1)}return input}}).filter("title",function(){return function(input){if(input&&"string"===typeof input){return String(input).toLowerCase().replace(/\s+/g," ").replace(/^.| .|-./g,function(match){return match.toUpperCase()})}return input}}).filter("gtCurrency",function($filter){return function(input,currencySymbol,currencySeparator,precisionArg){var output,precision;if(input){precision=undefined===precisionArg?2:precisionArg;output=$filter("number")(input,precision);output=currencySymbol+currencySeparator+output;return output}return input}}).filter("gtPhonePrefix",function(){return function(input){if(undefined!==input&&0<input.indexOf("-")){return"+"+input}return input}}).filter("gtPhoneFormat",function(){return function(input){if(undefined!==input){return input.replace(/--/g,"-").replace(/^-/g,"")}return input}}).filter("pluralize",function(){return function(input){var vowels=["a","e","i","o","u"],output;if(null!==input){output=String(input);if(2<=output.length){if("y"===output.slice(-1)&&-1===vowels.indexOf(output.slice(-2,-1))){return output.substring(0,output.length-1)+"ies"}}return output+"s"}return input}}).filter("escape",function(){var entityMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};return function(input){return String(input).replace(/[&<>"'\/]/g,function(s){return entityMap[s]})}}).filter("nl2br",function(){return function(input){return String(input).replace(/\n/g,"<br />")}}).filter("join",function(){return function(input,separatorArg){var separator;if(angular.isArray(input)){separator=null!==separatorArg&&undefined!==separatorArg?separatorArg:"";return input.join(separator)}return input}}).filter("trim",function(){return function(input){if("string"!==typeof input){return input}return input.replace(/^\s+|\s+$|\s+(?=\s)/g,"")}}).filter("gtDate",function($filter){return function(input){var date=Date.parse(input)?new Date(input):new Date(convertISOtoMilliSec(input)),dateNow=new Date,dayMicroseconds=24*60*60*1e3,dateDiffDays=Math.floor(dateNow.getTime()/dayMicroseconds)-Math.floor(date.getTime()/dayMicroseconds),formattedDate="";if(1>dateDiffDays){formattedDate="Today"}else if(2>dateDiffDays){formattedDate="Yesterday"}else if(dateNow.getYear()===date.getYear()||60>dateDiffDays){formattedDate=$filter("date")(date,"d MMM")}else if(!isNaN(dateDiffDays)){formattedDate=$filter("date")(date,"MMM yyyy")}return formattedDate;function convertISOtoMilliSec(inputArg){var isoDateRegex=/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-]\d\d):?(\d\d)?)?$/,isoDateParts=isoDateRegex.exec(inputArg),dateParts,hourOffset,minuteOffset,dateString,time,dateTime;if(null===isoDateParts){return inputArg}dateParts=isoDateParts[1].split("T");dateString=dateParts[0]?dateParts[0].split("-"):[];time=dateParts[1]?dateParts[1].split(":"):[];hourOffset=isoDateParts[4]?parseInt(isoDateParts[4],10):0;minuteOffset=(isoDateParts[5]?parseInt(isoDateParts[5],10):0)*(0>hourOffset?-1:1);dateTime=createArgumentsForDateUTC(dateString,time);dateTime.hour=parseInt(dateTime.hour,10)+hourOffset;dateTime.minute=parseInt(dateTime.minute,10)+minuteOffset;return Date.UTC(dateTime.year,dateTime.month,dateTime.day,dateTime.hour,dateTime.minute,dateTime.sec)}function createArgumentsForDateUTC(dateString,time){var dateTime={};dateTime.year=dateString[0]||0;dateTime.month=dateString[1]?dateString[1]-1:0;dateTime.day=dateString[2]||0;dateTime.hour=time[0]||0;dateTime.minute=time[1]||0;dateTime.sec=time[2]||0;return dateTime}}}).filter("gtDatesRange",function($filter){return function(input){var startDate,endDate,formattedDate="Starts ",dateFilter=$filter("date"),tempDate;if(input.dates_flexible){return"Dates flexible"}if(!input.start_date_ts||angular.isString(input.start_date_ts)){return"Dates not decided"}if(undefined!==input.start_date_prefix){formattedDate=input.start_date_prefix}startDate=new Date(input.start_date_ts*1e3);if(input.end_date_ts&&!angular.isString(input.end_date_ts)){if(input.start_date_ts>input.end_date_ts){tempDate=input.start_date_ts;input.start_date_ts=input.end_date_ts;input.end_date_ts=tempDate}endDate=new Date(input.end_date_ts*1e3);if(startDate.getFullYear()!==endDate.getFullYear()){formattedDate=dateFilter(startDate,"dd MMM yyyy")+" - "}else if(startDate.getMonth()!==endDate.getMonth()){formattedDate=dateFilter(startDate,"dd MMM")+" - "}else if(startDate.getDate()!==endDate.getDate()){formattedDate=dateFilter(startDate,"dd")+" - "}return formattedDate+dateFilter(endDate,"dd MMM yyyy")}if(undefined!==input.start_date_format){formattedDate+=dateFilter(startDate,input.start_date_format);return formattedDate}formattedDate+=dateFilter(startDate,"dd MMM, yyyy");return formattedDate}}).filter("gtCourseDatesRange",function($filter){return function(input){var gtDatesRangeFilter=$filter("gtDatesRange"),datesParam={},onlineMethodId=2;if(onlineMethodId===input.study_method_id&&input.dates_flexible){return"Anytime"}datesParam.start_date_ts=input.start_date_ts;datesParam.dates_flexible=input.dates_flexible;if("Post Graduate"===input.course_type){datesParam.start_date_format="MMM yyyy"}else{datesParam.start_date_format="dd MMM yyyy";datesParam.end_date_ts=input.end_date_ts}return gtDatesRangeFilter(datesParam)}}).filter("dateToAge",function(){return function(dob){var today=new Date,ageYears,ageMonths,ageDays,birthDate;if(!dob||isNaN(Date.parse(dob))){return""}birthDate=new Date(dob);ageYears=today.getFullYear()-birthDate.getFullYear();ageMonths=today.getMonth()-birthDate.getMonth();ageDays=today.getDate()-birthDate.getDate();if(0>ageMonths||0===ageMonths&&0>ageDays){ageYears=parseInt(ageYears,10)-1}return 0<ageYears?ageYears:0}}).filter("generateFQDN",function($location){return function(path){return $location.protocol()+"://"+$location.host()+path}}).filter("inCollection",function(){return function(needle,haystack){if(-1!==haystack.indexOf(needle)){return true}return false}}).filter("trimCollection",function(){return function(input,weeds){var output=[];if(!angular.isArray(input)){return input}angular.forEach(input,function(value){if(-1===weeds.indexOf(value)){output.push(value)}});return output}}).filter("objectKeys",function(){return function(obj){var keys=[];if(!obj){return keys}if(Object.keys){return Object.keys(obj)}angular.forEach(obj,function(value,key){if(obj.hasOwnProperty(key)){keys.push(key)}});return keys}}).filter("objectToArray",function(){return function(obj){return Object.keys(obj).map(function(k){return obj[k]})}}).filter("labelMap",function(){var labelMaps={noc_requirement:{REQUIRED_AVAILABLE:"Required (can be obtained)",REQUIRED_UNAVAILABLE:"Required (might not be obtained)",NOT_REQUIRED:"None",UNKNOWN:"Not aware"},visa_status:{CITIZEN:"Citizen Visa",STUDENT:"Student Visa",VISIT_TOURIST:"Visit / Tourist Visa",RESIDENCE_EMPLOYMENT:"Employment Residence Visa",RESIDENCE_PERSONAL:"Personal / Family Residence Visa"},arabic_fluency:{1:"Fluent",2:"None",3:"Working Knowledge"}};return function(input,type,defArg){var def=undefined===defArg?"":defArg;if(undefined===type){return def}return labelMaps[type]&&labelMaps[type][input]||def}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.googleChart",["googlechart"]).config(function($provide){$provide.decorator("googleChartDirective",function($delegate,$window,$rootScope){var directive=$delegate[0],link=directive.link;directive.compile=function(){return function(scope,element,attrs){var googleVisualisationEvents;scope.$watch("chartWrapper",function(newWrapper,oldWrapper){if(undefined!==oldWrapper){googleVisualisationEvents.removeAllListeners(oldWrapper)}if(undefined!==newWrapper){if(undefined===googleVisualisationEvents){googleVisualisationEvents=$window.google.visualization.events}googleVisualisationEvents.addListener(newWrapper,"ready",onWrapperReady)}});scope.$on("$destroy",function(){googleVisualisationEvents.removeAllListeners(scope.chartWrapper)});link.apply(null,arguments);function onWrapperReady(){if(undefined!==scope.chart.id){$rootScope.$broadcast("googleChart.chart:rendered",{id:scope.chart.id})}activateGtCustomLinksOnChart()}function activateGtCustomLinksOnChart(){scope.data=scope.chartWrapper.getDataTable();if("true"!==attrs.hasNoLinks){googleVisualisationEvents.addListener(scope.chartWrapper.getChart(),"onmouseover",onMouseover);googleVisualisationEvents.addListener(scope.chartWrapper.getChart(),"onmouseout",onMouseout);scope.select=onSelect;if("true"===attrs.hasDifferentAnnotationColor){changeAnnotationColor()}}}function changeAnnotationColor(){var tags=element.find("text"),i,linkValues=[],columnNumber;for(i=0;i<scope.data.getNumberOfColumns();i++){if(scope.data.getColumnProperty(i,"links")){columnNumber=i}}if(!columnNumber){return}for(i=0;i<scope.data.getNumberOfRows();i++){if(null!==scope.data.getProperty(i,columnNumber,"gtTypeLinkUrl")){linkValues.push(scope.data.getValue(i,columnNumber))}}angular.forEach(tags,function(tag){if(-1<linkValues.indexOf(tag.textContent)){tag.setAttribute("fill","#0077b5")}})}function onSelect(item){var redirectLink=scope.data.getProperty(item.selectedItem.row,item.selectedItem.column,"gtTypeLinkUrl");if(null!==redirectLink&&""!==redirectLink){$window.location.href=redirectLink}}function onMouseover(hoveredItem){var attachedLink=scope.data.getProperty(hoveredItem.row,hoveredItem.column,"gtTypeLinkUrl");if(null!==attachedLink&&""!==attachedLink){element.css("cursor","pointer")}}function onMouseout(hoveredItem){var attachedLink=scope.data.getProperty(hoveredItem.row,hoveredItem.column,"gtTypeLinkUrl");if(null!==attachedLink&&""!==attachedLink){element.css("cursor","default")}}}};return $delegate})})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.log",["GT.lib.bridge"]).factory("gtLogService",function($http,$q,dataService){return{logEvent:function(data,url){var encodedData=dataService.urlEncodeData(data);return $http.post(url,encodedData,{params:{_method:"PUT"},headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}).directive("gtLogPath",function($http){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(){$http.get(attrs.gtLogPath)})}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.login",["ui.bootstrap","GT.lib.ui","GT.lib.bridge","ngResource","ngCookies","GT.lib.login.loginType","GT.lib.login.candidate","GT.lib.login.employer","GT.lib.login.affiliate","GT.lib.login.courseOrganiser"]).value("loginPageRedirectPath",false).controller("loginPageController",function($scope,$window,gtStorageService,loginPageRedirectPath){$scope.$on("login.candidate:success",function(){gtStorageService.setItem("user","lastLoginType","candidate");$window.location.href=loginPageRedirectPath||"/home/employeeUpdateMissing.php?nf="})}).controller("loginModalController",function($scope,$modalInstance,$rootScope,$window,params,gtStorageService,$cookies,flashBag){var loginType,partialMap={candidate:"/_partials/candidateLogin",employer:"/_partials/employerLogin",affiliate:"/_partials/affiliateLogin",courseOrganiser:"/_partials/courseOrganiserLogin",candidateForgotPassword:"/_partials/candidateForgotPassword",candidatePasswordSent:"/_partials/candidatePasswordSent",employerForgotPassword:"/_partials/employerForgotPassword",employerPasswordSent:"/_partials/employerPasswordSent",affiliateForgotPassword:"/_partials/affiliateForgotPassword",affiliatePasswordSent:"/_partials/affiliatePasswordSent",affiliatePasswordReset:"/_partials/affiliatePasswordReset",loginTypeChoice:"/_partials/loginTypeChoice"},forceReloadOnSuccess=false,redirectPathWithoutHash;$scope.form={};$scope.$on("login.candidate:success",function(){$modalInstance.close();gtStorageService.setItem("user","lastLoginType","candidate");if(params.redirectPath){redirectPathWithoutHash=params.redirectPath.substring(0,params.redirectPath.indexOf("#"));forceReloadOnSuccess=redirectPathWithoutHash===$window.location.href}if(forceReloadOnSuccess){$window.location.reload(true)}if(params.redirectPath){$window.location.href=params.redirectPath}$rootScope.$broadcast("login.candidate:postSuccess")});if($cookies.seenAccountTypeChoice){gtStorageService.setItem("user","seenAccountTypeChoice",$cookies.seenAccountTypeChoice);deleteCookie("seenAccountTypeChoice")}if($cookies.lastLoginType){gtStorageService.setItem("user","lastLoginType",$cookies.lastLoginType);deleteCookie("lastLoginType")}$scope.hasFriction=false;$scope.displayErrors="true"===gtStorageService.getItem("user","seenAccountTypeChoice");if(true===params.force){loginType=params.type}else{loginType=gtStorageService.getItem("user","lastLoginType")||params.type}$scope.partialDataRepo={};$scope.showSecondaryLink=params.showSecondaryLink||true;$scope.modalTitle=params.modalTitle||"";$scope.updatePartial=function(partialKey){$scope.loginPartialUrl=partialMap[partialKey]||partialMap.candidate;$scope.hasFriction=true};$scope.stopFriction=function(){$scope.hasFriction=false};$scope.updatePartial(loginType);$scope.$on("passwordSent.candidate:success",function(evt,data){$scope.updatePartial("candidatePasswordSent");$scope.partialDataRepo=data});$scope.$on("login.candidate:failure",function(){if("true"!==gtStorageService.getItem("user","seenAccountTypeChoice")){$scope.updatePartial("loginTypeChoice")}});$scope.$on("login.type:selected",function(evt,choice){$scope.displayErrors=true;$scope.updatePartial(choice)});$scope.$on("login.employer:success",function(){gtStorageService.setItem("user","lastLoginType","employer");$window.location.href="/employers/select-account"});$scope.$on("passwordSent.employer:success",function(evt,data){$scope.updatePartial("employerPasswordSent");$scope.partialDataRepo=data});$scope.$on("login.affiliate:success",function(){$window.location.href="/affiliates/workspace"});$scope.$on("login.courseOrganiser:success",function(){$window.location.href="/course-organisers/leads"});$scope.$on("passwordSent.affiliate:success",function(evt,data){$scope.updatePartial("affiliatePasswordSent");$scope.partialDataRepo=data});$scope.$on("passwordReset.affiliate:success",function(){$modalInstance.close();flashBag.save("password-updated").then(function(){affiliatesHomeRedirect()},function(){affiliatesHomeRedirect()})});function affiliatesHomeRedirect(){$window.location.href="/affiliates/workspace"}function deleteCookie(type){var expiryDate=new Date;$window.document.cookie=type+"="+null+";"+" expires="+expiryDate.toUTCString()+";"+" path=/"}}).directive("gtModalLogin",function($modal){return{link:function(scope,element,attrs){var isModalOpen=false,modalInstance;element.bind("click keypress",function(evt){if(true===isModalOpen){return}if(undefined===evt.which){evt.which=evt.keyCode}if("keypress"===evt.type&&13!==evt.which)return;scope.$apply(function(){modalInstance=$modal.open({templateUrl:"/_partials/loginTemplate",controller:"loginModalController",windowClass:"gt-login-box",resolve:{params:function(){return{type:attrs.gtModalLogin,modalTitle:attrs.modalTitle,showSecondaryLink:attrs.showSecondaryLink,force:"true"===attrs.force,redirectPath:attrs.redirectPath}}}});isModalOpen=true;modalInstance.result.then(function(){isModalOpen=false},function(){isModalOpen=false})})})}}}).controller("sessionTimeoutController",function($scope,$modalInstance,flashBag,sessionUserType){var loginUrlMap={employer:"/home/login.php?f=e&msg=NoSession",candidate:"/home/login.php?f=c&msg=NoSession",affiliate:"/affiliates/login"};$scope.userType=sessionUserType;flashBag.clear();flashBag.add("warning","Your session has timed out. To continue, please ",true,loginUrlMap[sessionUserType],"login");$scope.$on("app.sessionAuth:success",function(){$modalInstance.dismiss()})}).factory("authService",function($http,$q,dataService){var httpConfig={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},transformRequest:function(data){var isDataValid=angular.isObject(data)&&"[object File]"!==String(data);return isDataValid?dataService.urlEncodeData(data):data}};return{login:function(userType,parameters){var deferred=$q.defer();httpConfig.url="/api/"+userType+"/login";httpConfig.data=parameters;if(undefined!==httpConfig.data.password){httpConfig.data.password=httpConfig.data.password.replace(/^[\s\xA0]+|[\s\xA0]+$/g,"")}$http(httpConfig).success(function(response){deferred.resolve(response)}).error(function(error){deferred.reject(error)});return deferred.promise},sendPasswordReminder:function(userType,email){var deferred=$q.defer();httpConfig.url="/api/"+userType+"/password";httpConfig.data={email:email};$http(httpConfig).success(function(response){deferred.resolve(response)}).error(function(error){deferred.reject(error)});return deferred.promise},resetPassword:function(userType,parameters){var deferred=$q.defer();httpConfig.url="/api/"+userType+"/me/password";httpConfig.data=parameters;httpConfig.method="PUT";$http(httpConfig).success(function(response){deferred.resolve(response)}).error(function(error){deferred.reject(error)});return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.modalListBrowser",[]).provider("modalListBrowser",function(){var configDef={templateUrls:{prev:"template/modal-list-browser/prev.html",next:"template/modal-list-browser/next.html",caption:"template/modal-list-browser/caption.html"}},configRes;return{configure:function(config){configRes=angular.extend({},configDef,"object"===typeof config&&angular.copy(config)||{});if(!configRes.getResults){throw new Error("modalListBrowserProvider.configure: "+"config.getResults should be provided.")}},$get:modalListBrowserService};function modalListBrowserService($q,$injector,$document,$rootScope){return{open:function(params){var lastModalNode=Array.prototype.slice.call($document[0].querySelectorAll(".modal")).pop(),scope;if(!lastModalNode){return null}scope=$rootScope.$new();scope.index=params.index;return $injector.instantiate(ModalListBrowserController,{scope:scope,config:configRes,modalNode:lastModalNode})}}}function ModalListBrowserController($rootScope,$injector,$document,$compile,$timeout,$http,$templateCache,scope,config,modalNode){var results={},timeoutPromise=null,elements={},templateUrls=config.templateUrls,lastMousePosition={pageX:null,pageY:null},bodyNode=$document.find("body")[0];scope.zIndex=Number(modalNode.style.zIndex)+5;scope.isVisible=false;Object.keys(templateUrls).forEach(function(key){var templateUrl=templateUrls[key];$http.get(templateUrl,{cache:$templateCache}).success(function(template){var element=$compile(template)(scope);$document.find("body").eq(0).append(element);elements[key]=element})});$injector.invoke(config.getResults).then(function(resultsArg){results=resultsArg;scope.minIndex=0;scope.maxIndex=results.data.length-1;scope.isLoading=false;scope.isHover=false;scope.prev=function(){goToIndex(scope.index-1)};scope.next=function(){goToIndex(scope.index+1)};$document.bind("mousemove",mouseMoveHandler);$document.bind("keyup",keyupHandler)});return{close:function(){Object.keys(elements).forEach(function(nodeName){elements[nodeName].remove();delete elements[nodeName]});$document.unbind("mousemove",mouseMoveHandler);$document.unbind("keyup",keyupHandler);scope.$destroy()}};function goToIndex(newIndex){var markNodes=$document.find("div#cv-modal").find("mark");if(scope.isLoading){return}if(newIndex>scope.maxIndex||newIndex<scope.minIndex){return}scope.isLoading=true;angular.forEach(markNodes,function(node){node.nextSibling.remove();node.remove()});$rootScope.$broadcast("modalListBrowser:change",{success:function(){scope.index=newIndex;scope.isLoading=false},error:function(){scope.isLoading=false},item:results.data[newIndex]})}function mouseMoveHandler(evt){if(evt.pageX===lastMousePosition.pageX&&evt.pageY===lastMousePosition.pageY){return}lastMousePosition.pageX=evt.pageX;lastMousePosition.pageY=evt.pageY;scope.$apply(function(){if(timeoutPromise){$timeout.cancel(timeoutPromise)}scope.isVisible=true;if(!scope.isHover){timeoutPromise=$timeout(function(){scope.isVisible=false;timeoutPromise=null},2e3)}})}function keyupHandler(evt){if(evt.target!==modalNode&&evt.target!==bodyNode){return}if(evt.metaKey||evt.ctrlKey){return}scope.$apply(function(){if(37===evt.keyCode){scope.prev()}else if(39===evt.keyCode){scope.next()}})}}}).run(function($templateCache){$templateCache.put("template/modal-list-browser/prev.html",'<a class="modal-list-browser-nav modal-list-browser-nav-prev"'+' ng-style="{ zIndex: zIndex }"'+' ng-click="prev()"'+' ng-mouseenter="isHover = true"'+' ng-mouseleave="isHover = false"'+' ng-class="{ hidden: !isVisible || index <= minIndex }"'+' title="Previous">'+'<i class="fa fa-fw fa-chevron-left"></i>'+"</a>");$templateCache.put("template/modal-list-browser/next.html",'<a class="modal-list-browser-nav modal-list-browser-nav-next"'+' ng-style="{ zIndex: zIndex }"'+' ng-click="next()"'+' ng-mouseenter="isHover = true"'+' ng-mouseleave="isHover = false"'+' ng-class="{ hidden: !isVisible || index >= maxIndex }"'+' title="Next">'+'<i class="fa fa-fw fa-chevron-right"></i>'+"</a>");$templateCache.put("template/modal-list-browser/caption.html",'<div class="modal-list-browser-caption"'+' ng-class="{ hidden: !isVisible }"'+' ng-style="{ zIndex: zIndex }">'+' ng-mouseenter="isHover = true"'+' ng-mouseleave="isHover = false"'+"{{ index + 1 }} of {{ maxIndex + 1 }}"+"</div>")})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.paginator",[]).factory("gtPaginatorService",function(){function Pagination(){this.currentResults=[]}Pagination.prototype.goTo=function(newCurrentPageArg){var pages=[],windowFirst,windowLast,newCurrentPage=newCurrentPageArg,i;if(newCurrentPage>this.lastPage)newCurrentPage=this.lastPage;if(newCurrentPage<this.firstPage)newCurrentPage=this.firstPage;windowFirst=newCurrentPage-Math.ceil(this.windowSize/2);windowFirst=Math.max(windowFirst,this.firstPage);windowLast=Math.min(windowFirst+this.windowSize,this.lastPage);for(i=windowFirst;i<=windowLast;i+=1){pages.push(i)}this.firstItemNumber=this.pageSize*(newCurrentPage-1)+1;this.lastItemNumber=Math.min(this.firstItemNumber+this.pageSize-1,this.totalCount);this.currentResults=this.results.slice(this.firstItemNumber-1,this.lastItemNumber);this.currentPage=newCurrentPage;this.pages=pages};function Paginator(options){this.pagination=new Pagination;this.init(options)}Paginator.prototype.init=function(options){var pagination=this.pagination,currentPage=options.currentPage||pagination.currentPage||1;pagination.pageSize=options.pageSize||pagination.pageSize||25;pagination.results=options.results||pagination.results||[];pagination.totalCount=options.totalCount||pagination.results.length;pagination.firstPage=options.firstPage||pagination.firstPage||1;pagination.currentPage=options.currentPage||pagination.currentPage||1;pagination.lastPage=Math.max(pagination.firstPage,Math.ceil(pagination.totalCount/pagination.pageSize));pagination.windowSize=options.windowSize||pagination.windowSize||10;pagination.goTo(currentPage);pagination.currentResults=options.currentResults||pagination.currentResults};return{create:function(options){return new Paginator(options)}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.password",["GT.lib.bridge","GT.lib.validation","ngResource"]).directive("gtModalChangePassword",function($modal){function modalChangePasswordController($scope,$modalInstance,params,employerUserDataService,flashBag){var successHandler;$scope.userid=params.userid;$scope.firstname=params.firstname;$scope.lastname=params.lastname;$scope.username=params.username;$scope.requireOldPassword=params.requireOldPassword;$scope.form={};$scope.errors=[];$scope.success=false;$scope.submit=function(){var fieldsToUpdate={password:$scope.form.password};if($scope.requireOldPassword){fieldsToUpdate.old_password=$scope.form.old_password}employerUserDataService.update($scope.userid,fieldsToUpdate).then(successHandler,function(response){$scope.success=false;$scope.errors=response.data.errors})};if("global"===params.successMessageLocation){successHandler=function(){$scope.$dismiss();flashBag.add("success","Password Successfully Changed")}}else{successHandler=function(){$scope.success=true;$scope.errors=[]}}}return{link:function(scope,element,attrs){var isModalOpen=false,modalInstance;element.bind("click",function(){if(true===isModalOpen)return;scope.$apply(function(){modalInstance=$modal.open({templateUrl:"/_partials/employerChangePassword",controller:modalChangePasswordController,resolve:{params:function(){return{userid:attrs.userid,firstname:attrs.firstname,lastname:attrs.lastname,username:attrs.username,requireOldPassword:"true"===attrs.requireOldPassword,successMessageLocation:attrs.successMessageLocation}}}});isModalOpen=true;modalInstance.result.then(function(){isModalOpen=false},function(){isModalOpen=false})})})}}}).factory("employerUserDataService",function($resource,$q){var employersResource=$resource("/api/employees/:userid");return{update:function(userid,parameters){var deferred=$q.defer();employersResource.save({userid:userid},parameters,deferred.resolve,deferred.reject);return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.recaptcha",[]).directive("gtRecaptcha",function($log,gtRecaptchaService){return{require:"?ngModel",link:function(scope,element,attrs,ngModel){if(undefined===ngModel){$log.warn("directive gtRecaptcha needs ngModel.");return}gtRecaptchaService.render(element[0],{theme:attrs.theme||"light",sitekey:attrs.sitekey,callback:responseHandler,"expired-callback":responseHandler});function responseHandler(response){scope.$apply(function(){ngModel.$setViewValue(response)})}}}}).factory("gtRecaptchaService",function($document,$window,$q,$timeout,$log){var service={},recaptchaDeferred=$q.defer(),recaptchaTimeout=5e3,recaptchaTimeoutPromise,recaptchaResolved=false,script;script=$document[0].createElement("script");script.src="https://www.google.com/recaptcha/api.js?"+"onload=gtRecaptchaServiceOnloadHandler&render=explicit";script.async=1;script.defer=1;recaptchaTimeoutPromise=$timeout(function(){if(recaptchaResolved){return}recaptchaResolved=true;recaptchaDeferred.reject("Timeout");$log.warn("reCapthca timed out")},recaptchaTimeout);$window.gtRecaptchaServiceOnloadHandler=function(){if(recaptchaResolved){return}recaptchaResolved=true;$timeout.cancel(recaptchaTimeoutPromise);recaptchaDeferred.resolve($window.grecaptcha)};$document.ready(function(){$document.find("head").append(script)});service.render=function(container,parameters){return recaptchaDeferred.promise.then(function(recaptcha){return recaptcha.render(container,parameters)})};service.reset=function(widgetId){return recaptchaDeferred.promise.then(function(recaptcha){return recaptcha.reset(widgetId)})};service.getResponse=function(widgetId){return recaptchaDeferred.promise.then(function(recaptcha){return recaptcha.getResponse(widgetId)})};return service})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.session",[]).value("sessionUserType","default").value("sessionUserLevel","").config(function($httpProvider){$httpProvider.responseInterceptors.push(function($q,$rootScope){return function(promise){return promise.then(function(response){return response},function(response){if(401===response.status){$rootScope.$broadcast("app.userAuth:failure")}return $q.reject(response)})}})}).run(function($rootScope,$interval,$modal,$http,$window,sessionUserType,sessionAuthService,sessionCandidateLevelService,employerSwitchService,gtModal){$rootScope.$on("app.sessionAuth:failure",function(){$modal.open({templateUrl:"/_partials/sessionTimeout",controller:"sessionTimeoutController"});employerSwitchService.remove()});$rootScope.$on("app.employer:switched",function(){var modalMessage="You have switched your employer account. You will now be taken to the new account you chose";gtModal.open({title:"Alert",message:modalMessage,templateName:"popupBox",windowClass:"modal-alert",trueCallBack:function(){$window.location.reload()},actionLabel:{ok:"Ok"}})});if("employer"===sessionUserType){$interval(function(){$http.post("/api/employers/me/pings")},60*1e3)}}).factory("sessionAuthService",function($rootScope,$timeout,gtStorageService,sessionUserType,flashBag){if("unknown"!==sessionUserType){setUserType(sessionUserType)}$rootScope.$on("app.userAuth:failure",function(){if("default"!==getUserType()){setUserType("default");$rootScope.$broadcast("app.sessionAuth:failure")}});$rootScope.$on("storage.key:changed",function(evt,data){if("gt:userSession:authenticated:userType"===data.key&&data.oldValue!==data.newValue){if("default"===data.newValue&&sessionUserType===data.oldValue){$rootScope.$broadcast("app.sessionAuth:failure")}else if(sessionUserType===data.newValue){flashBag.clear();$rootScope.$broadcast("app.sessionAuth:success")}}});return{getUserType:getUserType};function getUserType(){return gtStorageService.getItem("userSession:authenticated","userType")}function setUserType(userType){gtStorageService.setItem("userSession:authenticated","userType",userType)}}).factory("sessionCandidateLevelService",function(gtStorageService,sessionUserLevel){var candidateLevel="";if(""!==sessionUserLevel){setUserLevel(sessionUserLevel)}return{getUserLevel:getUserLevel,setUserLevel:setUserLevel};function getUserLevel(){return candidateLevel}function setUserLevel(userLevel){candidateLevel=userLevel}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.social",["GT.lib.bridge"]).directive("gtShare",function($window,$document,urlService){var allServices={facebook:{windowParams:{width:"675",height:"375"}},twitter:{windowParams:{width:"550",height:"450"}},googleplus:{windowParams:{width:"675",height:"450"}},linkedin:{windowParams:{width:"700",height:"450"}},messenger:{windowParams:{width:"982",height:"464"}}},serviceUrl="http://api.addthis.com/oexchange/0.8/forward/__service__/offer",defaultWindowParams={left:620,top:315,personalbar:"no",toolbar:"no",scrollbars:"yes",location:"yes",resizable:"yes"};return{scope:true,link:function(scope,element,attrs){var serviceName=attrs.gtShare,serviceConf=serviceName&&allServices[serviceName];if(!serviceConf)return;element.bind("click",function(){var url=attrs.gtShareUrl||$window.location.href,serviceParams={url:encodeURIComponent(urlService.addSearchParams(url,{gtp:1032,gtpd:35})),title:encodeURIComponent(attrs.gtShareTitle||$document.find("title").text()),pubid:"gulftalent",ct:0},windowParams=angular.extend({},defaultWindowParams,serviceConf.windowParams),windowParamsParts=[],serviceParamsParts=[];angular.forEach(windowParams,function(value,key){windowParamsParts.push(key+"="+value)});angular.forEach(serviceParams,function(value,key){serviceParamsParts.push(key+"="+value)});$window.open(serviceUrl.replace("__service__",serviceName)+"?"+serviceParamsParts.join("&"),"addthis_share",windowParamsParts.join(","))})}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.ui",["GT.lib.bridge","angularSpinner","ui.bootstrap"]).directive("gtSpinner",function(usSpinnerService,$timeout){return{scope:true,template:"<div "+'us-spinner="{color: spinnerColor}" '+'spinner-key="{{spinnerKey}}" '+'spinner-start-active="0"></div>',link:function(scope,element,attrs){var timeoutValue=+attrs.gtSpinnerTimeout||0,timeinValue=attrs.gtSpinnerTimein||0,isTimeoutActive,timeinPromise,timeoutPromise,keepSpinning;scope.spinnerKey=attrs.gtSpinnerKey;scope.spinnerColor=attrs.gtSpinnerColor||"#e0082a";if(""===attrs.gtSpinner){startSpinner()}else{scope.$watch(attrs.gtSpinner,function(value){keepSpinning=Boolean(value);if(keepSpinning){isTimeoutActive=true;$timeout.cancel(timeinPromise);$timeout.cancel(timeoutPromise);timeinPromise=$timeout(startSpinner,timeinValue);timeoutPromise=$timeout(timeoutCallBack,timeoutValue)}else if(!isTimeoutActive){stopSpinner()}})}function startSpinner(){usSpinnerService.spin(scope.spinnerKey);element.css("display","")}function stopSpinner(){usSpinnerService.stop(scope.spinnerKey);element.css("display","none")}function timeoutCallBack(){isTimeoutActive=false;if(!keepSpinning){stopSpinner()}}}}}).directive("gtCollapse",function($timeout,$rootScope){return{scope:true,priority:1,link:function(scope,element,attrs){var timeoutValue=attrs.gtCollapseTimeout||500,isTimeoutActive,timeoutPromise,isCollapseActive,evtNamespace="gtCollapse."+attrs.id;scope.isCollapsed=attrs.gtCollapse;if(""===attrs.gtCollapse){collapse()}else{scope.$watch(attrs.gtCollapse,function(value){isCollapseActive=Boolean(value);if(isCollapseActive){collapse();isTimeoutActive=true;$timeout.cancel(timeoutPromise);timeoutPromise=$timeout(timeoutCallBack,timeoutValue)}else if(!isTimeoutActive){expand()}})}if(attrs.id){scope.$watch(function(){return element.attr("class")},function(){if(element.hasClass("collapsing")){$rootScope.$broadcast(evtNamespace+":collapsing")}else if(element.hasClass("collapse")){if(element.hasClass("in")){$rootScope.$broadcast(evtNamespace+":expanded")}else{$rootScope.$broadcast(evtNamespace+":collapsed")}}})}function collapse(){scope.isCollapsed=true}function expand(){scope.isCollapsed=false}function timeoutCallBack(){isTimeoutActive=false;if(!isCollapseActive){expand()}}}}}).directive("gtHideOn",function(){return{link:function(parentScope,element,attrs){var scope=parentScope.$new();if(attrs.gtHideOn){angular.forEach(attrs.gtHideOn.split(" "),function(eventName){scope.$on(eventName,hide)})}function hide(){element.css("display","none")}}}}).directive("gtShowOn",function(){return{link:function(parentScope,element,attrs){var scope=parentScope.$new();if(attrs.gtShowOn){angular.forEach(attrs.gtShowOn.split(" "),function(eventName){scope.$on(eventName,show)})}function show(){element.css("display","")}}}}).directive("gtClickable",function($window){return{link:function(scope,element,attrs){element.bind("click",function(evt){var url=scope.$eval(attrs.gtClickable)||"";evt.preventDefault();if(""!==url){if(true===evt.ctrlKey){$window.open(url)}else{$window.location=url}}})}}}).directive("gtPopupBox",function(gtModal,$window){var modal=null;return{restrict:"A",scope:{message:"@",title:"@",type:"@",actionYes:"&",actionNo:"&",redirectYes:"@",redirectNo:"@"},link:function(scope,element,attrs){element.bind("click",function(evt){evt.preventDefault();scope.templateName="popupBox";scope.windowClass="modal-alert";scope.title=scope.title||"Please Confirm";scope.actionLabel={ok:attrs.actionLabelOk||"Ok",cancel:attrs.actionLabelCancel||"Cancel"};if(!modal){modal=gtModal.open(scope);scope.$apply(modal.result.then(function(){clearModalInstance();if(undefined!==scope.redirectYes){$window.location.href=scope.redirectYes}scope.actionYes()},clearModalInstance))}})}};function clearModalInstance(){modal=null}}).controller("gtModalStaticController",function($scope,$modalInstance,modalInfo,gtGAService){$scope.partialUrl="/_partials/"+modalInfo.partial;$scope.modalData=modalInfo.data;if(""!==modalInfo.gaTrackUrl){gtGAService.trackPage(modalInfo.gaTrackUrl)}$scope.$on("staticModal:changePartial",function(evt,partial){$scope.changePartial(partial)});$scope.changePartial=function(partial){$scope.partialUrl="/_partials/"+partial};$scope.$on("staticModal:close",function(evt){$modalInstance.close();evt.stopPropagation()})}).directive("gtModalStatic",function($modal,urlService){var template='<div ng-include="partialUrl"></div>';return{restrict:"A",scope:true,link:function(scope,element,attrs){var modalClass=attrs.gtModalClass||"",modalSize=scope.$eval(attrs.gtModalSize)||attrs.gtModalSize,windowClass="modal-window-"+(modalSize||"lg"),modalConfig;if(modalClass){windowClass+=" "+modalClass}element.bind("click",function(evt){evt.preventDefault();openModal()});function openModal(){modalConfig={template:template,controller:"gtModalStaticController",windowClass:windowClass,resolve:{modalInfo:function(){return{partial:urlService.addParamsToSearchString(scope.$eval(attrs.gtModalStatic),scope.$eval(attrs.gtModalStaticUrlParams)),gaTrackUrl:attrs.gtModalGaTrackUrl||"",data:scope.$eval(attrs.gtModalStaticData)}}}};if(attrs.gtModalBackdrop){modalConfig.backdrop=scope.$eval(attrs.gtModalBackdrop)}scope.$apply(function(){$modal.open(modalConfig)})}}}}).directive("gtLightBox",function(gtModal){return{restrict:"A",scope:{},link:function(scope,element,attrs){element.bind("click",function(e){var data={height:attrs.height||300,width:attrs.width||600,url:attrs.href,templateName:"lightBox",windowClass:"gt-ng-lightbox"};e.preventDefault();scope.$apply(function(){gtModal.open(data)})})}}}).factory("gtModal",function($modal){function controller($scope,$modalInstance,data){$scope.data=data;$scope.ok=function(){if(undefined!==data.trueCallBack){data.trueCallBack($scope.data)}$modalInstance.close()};$scope.cancel=function(){if(undefined!==data.falseCallBack){data.falseCallBack($scope.data)}$modalInstance.dismiss("cancel")};$scope.istypePrompt=function(){return"prompt"===data.type};$scope.istypeConfirm=function(){return"confirm"===data.type}}return{open:function(data){data.actionLabel={ok:data.actionLabel&&data.actionLabel.ok||"OK",cancel:data.actionLabel&&data.actionLabel.cancel||"Cancel"};return $modal.open({templateUrl:"/_partials/"+data.templateName,controller:controller,resolve:{data:function(){return data}},windowClass:data.windowClass})}}}).value("flashMessages",[]).factory("flashBag",function(flashMessages,$timeout,$q,$resource){var vanishTime=7e3,transitionTime=1e3,flashBagResource=$resource("/service/flashbag-message/save",{},{save:{method:"GET"}});return{add:function(type,message,persistentArg,link,linkText,hasModal){var persistent=persistentArg||false;flashMessages.push({type:type,message:message,persistent:persistent,link:link||"",linkText:linkText||"",hasModal:hasModal||false,tstamp:(new Date).getTime()});if(!persistent){vanisher()}},remove:function(index){flashMessages.splice(index,1)},getAll:function(){vanisher();return flashMessages},clear:function(){flashMessages.splice(0,flashMessages.length)},save:function(messageKey,placeholderValue){var params={message_key:messageKey},deferred=$q.defer();if(undefined!==placeholderValue){params.placeholder_value=placeholderValue}flashBagResource.save(params,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}};function vanisher(){$timeout(function(){var isMessageExpired,l=flashMessages.length,i;for(i=l-1;0<=i;i--){isMessageExpired=true;if(undefined!==flashMessages[i].tstamp){isMessageExpired=(new Date).getTime()-flashMessages[i].tstamp>=vanishTime}if(!flashMessages[i].persistent&&isMessageExpired){flashMessages[i].hasTransition=true;dismissFlashMessage(flashMessages[i].tstamp)}}},vanishTime)}function dismissFlashMessage(tstamp){$timeout(function(){var l=flashMessages.length,i;for(i=l-1;0<=i;i--){if(tstamp===flashMessages[i].tstamp&&!flashMessages[i].persistent){flashMessages.splice(i,1)}}},transitionTime)}}).directive("onRepeatDone",function(){return{restrict:"A",link:function($scope,element,attrs){if($scope.$last){$scope.$emit(attrs.onRepeatDone)}}}}).directive("equalizer",function($timeout,$window){return{restrict:"A",link:function(scope,element,attrs){var resizeTimeout;if(attrs.equalizerOn){angular.forEach(attrs.equalizerOn.split(" "),function(eventName){scope.$on(eventName,function(){$timeout(equalize)})})}else{equalize()}angular.element($window).bind("resize",function(){$timeout.cancel(resizeTimeout);resizeTimeout=$timeout(equalize,50)});function equalize(){var columns=element.children(),rowMaxHeights=[0],columnCounter=0,currentRow=0;element.css("visibility","hidden");angular.forEach(element.children(),function(column){column.children[0].style.height=""});angular.forEach(columns,function(column){var columnSize=computeColumnSize(column);if(isHidden(column)){return}columnCounter+=columnSize;if(24<columnCounter){rowMaxHeights.push(0);currentRow+=1;columnCounter=columnSize}rowMaxHeights[currentRow]=Math.max(rowMaxHeights[currentRow],column.children[0].offsetHeight)});columnCounter=0;currentRow=0;angular.forEach(columns,function(column){var columnSize=computeColumnSize(column);if(isHidden(column)){return}columnCounter+=columnSize;if(24<columnCounter){currentRow+=1;columnCounter=columnSize}column.children[0].style.height=rowMaxHeights[currentRow]+"px"});element.css("visibility","")}function isHidden(node){return"none"===node.style.display}function computeColumnSize(node){var match=node.className.match(/col-\w+-(\d+)/);if(match[1]){return parseInt(match[1],10)}return null}}}}).directive("gtOnInViewport",function($window){return{restrict:"A",link:function(scope,element,attrs){var testimonialsPos;angular.element($window).bind("scroll",doIfInViewport);doIfInViewport();function doIfInViewport(){testimonialsPos=element.prop("offsetTop");if($window.pageYOffset+$window.innerHeight>=testimonialsPos){if(undefined!==typeof attrs.gtOnInViewport){scope.$eval(attrs.gtOnInViewport)}if(undefined!==typeof attrs.gtViewportClass){element.addClass(attrs.gtViewportClass)}angular.element($window).unbind("scroll",doIfInViewport)}}}}}).controller("flashMessagesController",function($scope,flashBag){$scope.flashMessages=flashBag.getAll();$scope.remove=function(index){flashBag.remove(index)}}).controller("infoMessagesController",function($scope,gtStorageService){var ns="info-messages",hideAction="hide";$scope.messageId="";$scope.showInfo=false;$scope.removeForCandidate=function(candidateId){$scope.showInfo=false;if(!$scope.messageId){return}gtStorageService.setItem(ns,getStorageId($scope.messageId,candidateId,hideAction),1)};$scope.updateMessageId=function(messageId,candidateId){$scope.messageId=messageId;$scope.showInfo=!(messageId&&gtStorageService.exists(ns,getStorageId(messageId,candidateId,hideAction)))};function getStorageId(messageId,candidateId,action){return[messageId,candidateId,action].join(":")}}).directive("scrollToFix",function($window,$document,$timeout){return{link:function(scope,element,attrs){var position="top",affixClass="affix-"+position,isCollapsibleCollapsed=false,controlElement=angular.element('<div style="height: 0;"></div>');element.parent()[0].insertBefore(controlElement[0],element[0]);$timeout(affixElement);angular.element($window).bind("scroll",function(){if(!isCollapsibleCollapsed){affixElement()}});angular.element($window).bind("resize",function(){if(!isCollapsibleCollapsed){affixElement(true)}});if(attrs.collapsibleElementId){scope.$on("gtCollapse."+attrs.collapsibleElementId+":expanded",function(){isCollapsibleCollapsed=false;affixElement(true)});scope.$on("gtCollapse."+attrs.collapsibleElementId+":collapsing",function(){removeAffixStyles(true)});scope.$on("gtCollapse."+attrs.collapsibleElementId+":collapsed",function(){isCollapsibleCollapsed=true;removeAffixStyles()})}function removeAffixStyles(isStylingForced){if(element.hasClass(affixClass)||isStylingForced){element.removeClass(affixClass);element.attr("style","");return true}return false}function applyAffixStyles(isStylingForced){if(!element.hasClass(affixClass)||isStylingForced){element.addClass(affixClass);element.css({width:controlElement[0].offsetWidth+"px","margin-top":""});return true}return false}function affixElement(isStylingForcedArg){var isStylingForced=isStylingForcedArg,viewportHeight=$window.innerHeight,controlTopOffset=getTopOffset(controlElement),parentContainer=element.parent().parent(),parentContainerBottom=getTopOffset(parentContainer)+parentContainer[0].offsetHeight,elementHeight=parseInt(element[0].offsetHeight,10),newPosition=elementHeight<viewportHeight?"top":"bottom",pageYOffsetTriggerOn;if(newPosition!==position){element.removeClass(affixClass);affixClass="affix-"+newPosition;isStylingForced=true;position=newPosition}if("bottom"===position){pageYOffsetTriggerOn=controlTopOffset+elementHeight-viewportHeight}else{pageYOffsetTriggerOn=controlTopOffset}if($window.pageYOffset>pageYOffsetTriggerOn){if("top"===position&&$window.pageYOffset+elementHeight<parentContainerBottom){applyAffixStyles(isStylingForced)}else if("bottom"===position&&$window.pageYOffset+viewportHeight<parentContainerBottom){applyAffixStyles(isStylingForced)}else if(removeAffixStyles(isStylingForced)){element.css({"margin-top":parentContainerBottom-(elementHeight+controlTopOffset)+"px"})}}else{removeAffixStyles(isStylingForced)}}function getTopOffset(elementArg){var node=elementArg[0],y=+node.offsetTop,style=$window.getComputedStyle(node);if("fixed"===style.position){y+=+$window.pageYOffset}else{while(node.offsetParent&&node.offsetParent!==$document[0].body){node=node.offsetParent;y+=+node.offsetTop}}return y}}}}).factory("gtScroll",function($window,$location,$anchorScroll,$timeout,$document){return{scrollTo:function(newHash){if($location.hash()===newHash){$anchorScroll()}else{$location.hash(newHash)}},smoothScrollTo:function(newHash,scrollingSpeedArg,smoothScrollHistoryArg){var scrollingSpeed=scrollingSpeedArg||100,smoothScrollHistory=smoothScrollHistoryArg||false,startY=$window.pageYOffset,stopY=elementYPosition(newHash),distance=stopY-startY,stepCount=25,step=Math.round(distance/stepCount),stepTransitionTime=Math.abs(Math.round(distance/scrollingSpeed)),startLeapY=startY,stopLeapY=startY+step,counter=0;if($location.hash()!==newHash&&smoothScrollHistory){$location.hash(newHash)}else if($location.hash()===newHash){return}if(0===step){return}while(Math.abs(stopY-stopLeapY)>Math.abs(step)){stepScrollTo(startLeapY,stopLeapY,counter*stepTransitionTime);stopLeapY+=step;startLeapY=stopLeapY;counter+=1}stepScrollTo(startLeapY,stopY,counter*stepTransitionTime);function stepScrollTo(startLeapYArg,stopLeapYArg,transitionTime){$timeout(function(){$window.scrollTo(startLeapYArg,stopLeapYArg)},transitionTime)}function elementYPosition(hashId){var element=$document[0].getElementById(hashId),y=element.offsetTop,node=element;while(node.offsetParent&&node.offsetParent!==$document[0].body){node=node.offsetParent;y+=node.offsetTop}return y}}}}).directive("smoothScrollTo",function($location,gtScroll){return{link:function(scope,element,attrs){element.bind("click",function(){scope.$apply(function(){gtScroll.smoothScrollTo(scope.$eval(attrs.smoothScrollTo),undefined,"undefined"!==typeof attrs.smoothScrollHistory)})})}}}).value("announcementBannerInfo",{forceCollapse:true,storedKey:""}).controller("announcementBannerController",function($scope,$timeout,gtStorageService,gtCookieService,announcementBannerInfo){var storedKey=announcementBannerInfo.storedKey,storedItem;$scope.isBannerCollapsed=true;if(false===announcementBannerInfo.forceCollapse){$timeout(function(){storedItem=gtStorageService.getItem("banner",storedKey);if(null===storedItem||"true"!==storedItem){$scope.isBannerCollapsed=false}})}$scope.toggleCollapse=function(){$scope.isBannerCollapsed=!$scope.isBannerCollapsed;gtStorageService.setItem("banner",storedKey,$scope.isBannerCollapsed)}}).controller("featureAnnouncementController",function($scope,$timeout){$scope.isBannerCollapsed=true;$timeout(function(){$scope.isBannerCollapsed=false})}).directive("gtVideo",function($document,$timeout,gtGAService,gtStorageService){return{scope:{},controller:gtVideoController,templateUrl:"/_partials/videoTemplate",link:function(scope,element,attrs){scope.videoTemplate=attrs.gtVideo;$document.bind("keypress keydown",function(evt){if(undefined===evt.which){evt.which=evt.keyCode}if(27===evt.which){scope.$apply(function(){scope.closeVideo()})}})}};function gtVideoController($scope){var body=$document.find("body").eq(0),percentPlayed=0,trackingEventLabel;$scope.videoElement="";$scope.isPlaying=false;$scope.isOpen=false;$scope.videoSeen=false;$scope.onVideoLoad=function(){$timeout(function(){$scope.videoElement=$document[0].getElementById($scope.video);$scope.videoElement.onended=function(){$scope.closeVideo()}})};$scope.openVideo=function(){body.addClass("video-open");$scope.video=$scope.videoTemplate;$scope.isOpen=true;$scope.isPlaying=true};$scope.closeVideo=function(){body.removeClass("video-open");angular.element($scope.videoElement.parentElement).addClass("fade");$timeout(closeVideo,150);function closeVideo(){$scope.video="";$scope.isOpen=false;$scope.isPlaying=false;$scope.videoSeen=true}if($scope.videoElement.duration){percentPlayed=$scope.videoElement.currentTime/$scope.videoElement.duration*100;if(25>percentPlayed){trackingEventLabel="Less that 25% Watched"}else{trackingEventLabel=Math.floor(percentPlayed/25)*25+"% Watched"}}else{trackingEventLabel="Video Closed before Loading"}gtGAService.trackEvent("Video",$scope.videoTemplate,trackingEventLabel);gtStorageService.setItem("video","watched",$scope.videoTemplate)};$scope.togglePlay=function(){if($scope.videoElement.paused){$scope.videoElement.play();$scope.isPlaying=true}else{$scope.videoElement.pause();$scope.isPlaying=false}}}}).factory("highlighter",function($document){return{highlight:function(wordArray,rootNode){angular.forEach(wordArray,function(wordToHighlight){if(1<wordToHighlight.length){highlightDocument(rootNode,wordToHighlight)}})}};function textNodeUnder(node,textNodesArg){var nonWhitespaceMatcher=/\S/,textNodes=textNodesArg||[],i,l;if(3===node.nodeType){if(nonWhitespaceMatcher.test(node.nodeValue)){textNodes.push(node)}}else{for(i=0,l=node.childNodes.length;i<l;i++){textNodeUnder(node.childNodes[i],textNodes)}}return textNodes}function highlightWords(textNodeArg,phraseArg){var phrase=phraseArg,regExpression,regExpSearch,i,match,parentElement,afterSplitText,highlighted,mark,textNode=textNodeArg,endPlusesCount,regExpressionSuffix;endPlusesCount=phrase.match(/\+*$/)[0].length;phrase=phrase.substring(0,phrase.length-endPlusesCount);regExpressionSuffix="[\\+]{"+endPlusesCount+","+endPlusesCount+"}";regExpression="\\b"+phrase+"\\b"+regExpressionSuffix;regExpSearch=new RegExp(regExpression,"i");while(-1<textNode.nodeValue.search(regExpSearch)){i=textNode.nodeValue.search(regExpSearch);match=textNode.nodeValue.match(regExpSearch);parentElement=textNode.parentNode;afterSplitText=textNode.splitText(i+match[0].length);highlighted=textNode.splitText(i);mark=$document[0].createElement("mark");mark.appendChild(highlighted);parentElement.insertBefore(mark,textNode.nextSibling);textNode=afterSplitText}}function highlightDocument(root,word){var textNodes=textNodeUnder(root),i,l;for(i=0,l=textNodes.length;i<l;i++){highlightWords(textNodes[i],word)}}}).directive("popoverHtmlUnsafe",function($tooltip){return $tooltip("popoverHtmlUnsafe","popover","mouseenter")}).directive("popoverHtmlUnsafePopup",function(){return{restrict:"EA",replace:true,scope:{title:"@",content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/popover/popover-html-unsafe-popup.html"}}).run(function($templateCache){$templateCache.put("template/popover/popover-html-unsafe-popup.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n'+'  <div class="arrow"></div>\n'+"\n"+'  <div class="popover-inner">\n'+'      <h3 class="popover-title" ng-bind-html-unsafe="title" ng-show="title"></h3>\n'+'      <div class="popover-content" ng-bind-html-unsafe="content"></div>\n'+"  </div>\n"+"</div>")}).directive("gtValidate",function($window,gtModal,flashBag){var modalInstance=null;return{priority:2,restrict:"A",require:"form",link:function(scope,element,attrs,formCtrl){element.bind("submit",function(evt){var form=element[0],error={},errorElement,modalData={},validationEnabled=""===attrs.gtValidate||scope.$eval(attrs.gtValidate);evt.preventDefault();if(true===evt.gtIsImmediatePropagationStopped){return}if(formCtrl.$invalid&&validationEnabled){evt.stopPropagation();evt.gtIsImmediatePropagationStopped=true;error.type=Object.keys(formCtrl.$error).filter(function(type){return!!formCtrl.$error[type]})[0];error.element=formCtrl.$error[error.type][0].$name;errorElement=angular.element(form[error.element]);modalData={title:errorElement.attr("message-title")||"Information Missing or Invalid",type:"alert",message:errorElement.attr("message-"+error.type)||errorElement.attr("message")||"Please fill required fields",actionLabel:{ok:attrs.actionLabelOk||"Ok",cancel:attrs.actionLabelCancel||"Cancel"},templateName:"popupBox",windowClass:"modal-alert",trueCallBack:function(){errorElement[0].focus()}};if("flash-message"===attrs.gtValidateNotificationType){scope.$apply(function(){flashBag.add("error",modalData.message)})}else if(!modalInstance){scope.$apply(function(){modalInstance=gtModal.open(modalData);modalInstance.result.then(clearModalInstance,clearModalInstance)})}}})}};function clearModalInstance(){modalInstance=null}}).directive("gtStoreCheckboxValue",function(gtStorageService){return{restrict:"A",link:function(scope,element,attrs){var splitPos=attrs.gtStoreCheckboxValue.lastIndexOf(":"),namespace=attrs.gtStoreCheckboxValue.substring(0,splitPos),id=attrs.gtStoreCheckboxValue.substring(splitPos+1);element.on("change",function(){gtStorageService.setItem(namespace,id,element[0].checked)})}}}).filter("gtExactTypeaheadMatch",function(){return function(input,expected){var filtered=[],length;if("string"!==typeof expected){return input}length=expected.length;angular.forEach(input,function(item){var inputSubstring=item.substr(0,length);if(inputSubstring.toLowerCase()===expected.toLowerCase()){filtered.push(item)}});return filtered}}).directive("gtScrollOn",function(gtScroll){return{link:function(scope,element,attrs){var gtScrollSpeed=attrs.gtScrollSpeed||100;if(attrs.gtScrollOn){angular.forEach(attrs.gtScrollOn.split(" "),function(eventName){scope.$on(eventName,scrollTo)})}function scrollTo(){gtScroll.smoothScrollTo(attrs.id,gtScrollSpeed)}}}}).directive("gtStrengthChecker",function(){return{scope:true,templateUrl:"template/progressbar/strength-checker.html",link:function(scope,element,attrs){var types={weak:"danger",moderate:"warning",strong:"success"},weakBound=attrs.gtStrengthWeakBound||300,strongBound=attrs.gtStrengthStrongBound||600;scope.barType=types.weak;scope.$watch(attrs.gtStrengthChecker,function(valueArg){var value=valueArg?valueArg.length:0;setStrength(value)});function setStrength(length){if(strongBound<length){scope.barType=types.strong}else if(weakBound<length){scope.barType=types.moderate}else{scope.barType=types.weak}}}}}).run(function($templateCache){$templateCache.put("template/progressbar/strength-checker.html",'<div class="text-sm text-supermuted pull-right">Strong</div>\n'+'<div class="text-sm text-supermuted">Weak</div>\n'+'<div class="progress progress-strength progress-strength-{{barType}}">\n'+'<span class="progress-bar progress-bar-{{barType}} progress-bar-low"></span>\n'+'<span class="progress-bar progress-bar-{{barType}} progress-bar-medium"></span>\n'+'<span class="progress-bar progress-bar-{{barType}} progress-bar-high"></span>\n'+"</div>")}).provider("gtProgressGradientService",function(){var gtProgressGradientConfig=[{value:0,color:"#E0082A"},{value:60,color:"#D9AA35"},{value:90,color:"#65A95A"}];return{setGradientConfig:function(value){angular.extend(gtProgressGradientConfig,value)},$get:gtProgressGradientService};function gtProgressGradientService(){var service={getGradientColor:function(value){var boundsColors=getBoundsColors(value,gtProgressGradientConfig),startBound=boundsColors[0],endBound=boundsColors[1],startRgb=hexToRgb(startBound.color),endRgb=hexToRgb(endBound.color),resultRgb;if(!(startRgb&&endRgb)){return"#000"}if(startBound===endBound){return startBound.color}resultRgb=calculateGradientRgb(startRgb,endRgb,(value-startBound.value)/(endBound.value-startBound.value));return rgbToHex(resultRgb)}};return service;function getBoundsColors(value,config){var startBound,endBound;angular.forEach(config,function(bound){if(value>=bound.value){startBound=bound}if(!endBound&&value<bound.value){endBound=bound}});if(!endBound){endBound=startBound}return[startBound,endBound]}function calculateGradientRgb(startRgb,endRgb,percentFade){var diffRed=endRgb.r-startRgb.r,diffGreen=endRgb.g-startRgb.g,diffBlue=endRgb.b-startRgb.b;return{r:Math.round(diffRed*percentFade)+startRgb.r,g:Math.round(diffGreen*percentFade)+startRgb.g,b:Math.round(diffBlue*percentFade)+startRgb.b}}function hexToRgb(hex){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null}function rgbToHex(rgbColor){return"#"+componentToHex(rgbColor.r)+componentToHex(rgbColor.g)+componentToHex(rgbColor.b)}function componentToHex(c){var hex=c.toString(16);return 1===hex.length?"0"+hex:hex}}}).directive("gtProgressbarGradient",function(gtProgressGradientService){return{scope:true,templateUrl:"template/progressbar/gt-gradient-bar.html",link:function(scope,element,attrs){scope.barStyle={};scope.progressClass=attrs.gtProgressbarClass||"";scope.progressTitleLow=attrs.gtProgressbarTitleLow||"";scope.progressTitleHigh=attrs.gtProgressbarTitleHigh||"";scope.$watch(attrs.gtProgressbarGradient,function(value){if(undefined===value){return}scope.barStyle={"background-color":gtProgressGradientService.getGradientColor(value),width:(1>value?1:value)+"%"}})}}}).run(function($templateCache){$templateCache.put("template/progressbar/gt-gradient-bar.html",'<div class="text-xs text-supermuted pull-right" ng-show="progressTitleHigh">'+"{{progressTitleHigh}}"+"</div>\n"+'<div class="text-xs text-supermuted" ng-show="progressTitleLow">{{progressTitleLow}}</div>\n'+'<div class="progress {{progressClass}} space-bottom-none">\n'+'<div class="progress-bar" ng-style="barStyle"></div>\n'+"</div>")}).directive("gtTruncate",function($http,$compile,$templateCache){return{restrict:"A",replace:true,link:function(scope,element,attrs){var height=element[0].offsetHeight,maxHeight=attrs.gtTruncateHeight,newScope=scope.$new(true),templateUrl="template/gt-truncate.html";newScope.toggleTruncate=function(){newScope.isTruncated=!newScope.isTruncated;if(newScope.isTruncated){element.css("height",maxHeight+"px")}else{element.css("height","auto")}element.toggleClass("truncate")};if(maxHeight<height){$http.get(templateUrl,{cache:$templateCache}).success(function(templateContent){element.after($compile(templateContent)(newScope))});newScope.toggleTruncate()}}}}).run(function($templateCache){$templateCache.put("template/gt-truncate.html","<p>"+'<a class="text-strong" ng-show="isTruncated" ng-click="toggleTruncate()">'+"+ show more"+"</a>"+'<a class="text-strong" ng-hide="isTruncated" ng-click="toggleTruncate()">'+"- show less"+"</a>"+"</p>")}).directive("gtOnEnter",function(){return{link:function(scope,element,attrs){element.bind("keydown",function(event){if(13===event.which){scope.$eval(attrs.gtOnEnter);event.preventDefault()}})}}}).directive("gtOverlay",function($compile,$http,$templateCache){return{templateUrl:"template/overlay/container.html",transclude:true,replace:true,link:function(scope,element,attrs){var isOverlayEnabled=""===attrs.gtOverlay?true:scope.$eval(attrs.gtOverlay),templateUrl=attrs.templateUrl||"template/overlay/overlay.html",overlayScope=scope.$new(true);scope.overlayOnEvent=attrs.gtOverlayOnEvent;if(!isOverlayEnabled){return}Object.keys(attrs).filter(function(key){return 0===key.indexOf("overlay")}).forEach(function(key){var methodName=key.replace(/^overlay/,"");methodName=methodName.slice(0,1).toLowerCase()+methodName.slice(1);overlayScope[methodName]=function(){return scope.$eval(attrs[key])}});$http.get(templateUrl,{cache:$templateCache}).success(function(templateContent){element.append($compile(templateContent.trim())(overlayScope))})}}}).run(function($templateCache){$templateCache.put("template/overlay/container.html",'<div class="overlay-container overlay-{{ overlayOnEvent }}">'+"<div ng-transclude></div>"+"</div>")}).run(function($templateCache){$templateCache.put("template/overlay/overlay.html",'<div class="overlay bg-translucent-light"></div>')}).directive("gtCandidateLevelFunctionalityBlocker",function(sessionCandidateLevelService,$compile,gtIdService,gtCandidateFunctionalityBlockerService){return{scope:true,link:function(scope,element,attrs){var nodes={levelOne:attrs.nodeOneType?angular.element("<"+attrs.nodeOneType+"/>"):angular.element("<span/>"),levelTwo:attrs.nodeTwoType?angular.element("<"+attrs.nodeTwoType+"/>"):angular.element("<span/>")},elements={levelOne:"",levelTwo:""};if("LEVEL_ONE"===sessionCandidateLevelService.getUserLevel()&&!gtCandidateFunctionalityBlockerService.hasListener()){gtCandidateFunctionalityBlockerService.setUpListener()}Object.keys(nodes).forEach(function(level){var regex=new RegExp("^"+level,"g");Object.keys(attrs).filter(function(key){return 0===key.indexOf(level)}).forEach(function(key){var attributeName=key.replace(regex,"").replace(/(?!^)([A-Z])/g,"-$1").toLowerCase();nodes[level].attr(attributeName,attrs[key])});nodes[level].attr("style","display: none");element.after(nodes[level]);elements[level]=$compile(nodes[level])(scope)});element.bind("click",clickOnElement);function clickOnElement(){if("LEVEL_ONE"===sessionCandidateLevelService.getUserLevel()){elements.levelOne[0].click();gtCandidateFunctionalityBlockerService.setElementToClick(elements.levelTwo)}else{elements.levelTwo[0].click()}}}}}).factory("gtCandidateFunctionalityBlockerService",function($rootScope,sessionCandidateLevelService,$timeout){var successfulLoginListener,elementToClick;return{hasListener:function(){if(undefined===successfulLoginListener){return false}return true},setUpListener:function(){if(successfulLoginListener){return}successfulLoginListener=$rootScope.$on("login.candidate:postSuccess",function(){sessionCandidateLevelService.setUserLevel("LEVEL_TWO");clickOnElement();successfulLoginListener()})},setElementToClick:function(element){elementToClick=element}};function clickOnElement(){$timeout(function(){elementToClick[0].click()})}}).controller("gtDummyController",function(){}).directive("gtCountryCodeSelect",function(countryList,$document){return{restrict:"E",scope:{countryCodeModelName:"=gtCountryCodeSelectInput",location:"=gtCountryCodeSelectLocation",preSelect:"=gtCountryCodeSelectPreselect"},link:function(scope,element){var inputWatcher,locationWatcher,selectedCountry,isCountryCodePreselected=false;scope.options=Object.keys(countryList).map(function(countryCode){return countryList[countryCode]});$document.bind("click",optionsToggle);if(scope.preSelect){locationWatcher=scope.$watch("location",setLocationBasedCountryCode)}inputWatcher=scope.$watch("countryCodeModelName",onInputChange);scope.selectCountry=selectCountry;function optionsToggle(evt){var listElement,selectedElement,targetElement=angular.element(evt.target);if(targetElement.attr("gt-country-code-show")){listElement=targetElement.parent().parent().find("ul");listElement.removeClass("hide");if(selectedCountry){selectedElement=element[0].querySelector("[data-loccode='"+selectedCountry.loccode+"']");if(selectedElement.offsetTop){listElement[0].scrollTop=selectedElement.offsetTop}}}else{element.find("ul").addClass("hide")}}function setLocationBasedCountryCode(location){if(location&&(""===scope.countryCodeModelName||isCountryCodePreselected)&&countryList.hasOwnProperty(location)){isCountryCodePreselected=true;scope.countryCodeModelName=countryList[location].countrycode}}function onInputChange(code){var countriesFound,hasCountry=false;if(undefined!==code&&""!==code){countriesFound=Object.keys(countryList).map(function(countryCode){return countryList[countryCode]}).filter(function(country){if(country.countrycode.toString()===code.toString()){return true}return false});if(0===countriesFound.length){scope.countryCodeModelName="";return}if(1===countriesFound.length){showSelectedCountry(countriesFound[0]);return}if(scope.location){countriesFound.every(function(country){if(country.loccode.toString()===scope.location.toString()){showSelectedCountry(country);hasCountry=true;return false}return true});if(!hasCountry){scope.chosenHtml="+"+code}}}else{showSelectedNone()}}function showSelectedCountry(country){selectedCountry=country;scope.chosenHtml='<i class="flag flag-base flag-'+country.loccodeold+'"'+'  gt-country-code-show="true"></i> +'+'<span gt-country-code-show="true">'+country.countrycode+"<span>"}function selectCountry(country){inputWatcher();if(undefined!==locationWatcher){locationWatcher()}if(""===country){scope.countryCodeModelName="";showSelectedNone()}else{scope.countryCodeModelName=country.countrycode;showSelectedCountry(country)}}function showSelectedNone(){scope.chosenHtml="Select"}},templateUrl:"template/forms/countryCodeSelect.html"}}).run(function($templateCache){$templateCache.put("template/forms/countryCodeSelect.html","<div>\n"+'    <div class="form-control text-muted select-like"'+'      gt-country-code-show="true" ng-bind-html-unsafe="chosenHtml">'+"    </div>\n"+"\n"+'    <ul class="select-like-list hide country-codes-list">\n'+"        <li ng-click=\"selectCountry('')\">Select</li>"+'        <li ng-click="selectCountry(option)"'+"          ng-repeat=\"option in options | orderBy:'locnameshort'\""+'          data-loccode="{{ option.loccode }}">'+'            <span class="flag-container">'+'                <i class="flag flag-base flag-{{ option.loccodeold }}"></i>'+"            </span>"+"           {{ option.locnameshort }} +{{ option.countrycode }}"+"        </li>\n"+"    </ul>\n"+"</div>")}).value("countryList",{}).directive("gtCountdown",function($timeout,$interval){return{restrict:"A",scope:{totalSeconds:"@gtCountdownTotalSeconds",hasCaption:"@gtCountdownHasCaption"},templateUrl:"template/salespage/countdown.html",link:function(scope,element){var timeCounter,leftHours=0,leftMinutes=0,leftSeconds=0;scope.timerLeft={seconds:"00",minutes:"00",hours:"00"};scope.totalSeconds=scope.totalSeconds?scope.totalSeconds:0;scope.hasCaption=scope.hasCaption?scope.hasCaption:true;function formatTimer(){scope.timerLeft.hours=10>leftHours?"0"+leftHours:leftHours;scope.timerLeft.minutes=10>leftMinutes?"0"+leftMinutes:leftMinutes;scope.timerLeft.seconds=10>leftSeconds?"0"+leftSeconds:leftSeconds}function calculateTimer(){leftHours=Math.floor(scope.totalSeconds/3600);leftMinutes=Math.floor(scope.totalSeconds/60%60);leftSeconds=scope.totalSeconds%60}element.bind("$destroy",function(){$interval.cancel(timeCounter)});$timeout(function(){calculateTimer();formatTimer()});timeCounter=$interval(function(){calculateTimer();formatTimer();if(0>=scope.totalSeconds){$interval.cancel(timeCounter)}scope.totalSeconds-=1},1e3)}}}).run(function($templateCache){$templateCache.put("template/salespage/countdown.html",'<span class="countdown-wrapper">'+'<span class="countdown">'+"{{ timerLeft.hours }}"+'<span ng-show="hasCaption" class="countdown-caption">Hrs</span>'+"</span>:"+'<span class="countdown">'+"{{ timerLeft.minutes }}"+'<span ng-show="hasCaption" class="countdown-caption">Min</span>'+"</span>:"+'<span class="countdown">'+"{{ timerLeft.seconds }}"+'<span ng-show="hasCaption" class="countdown-caption">Sec</span>'+"</span>"+"</span>")})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.util",[]).factory("gtIdService",function(){var lastId=0;return{getId:function(){lastId+=1;return lastId}}}).factory("gtCurrencyConversionService",function(){var exchangeRatesList={AED:3.673,BHD:.377,KWD:.304,OMR:.385,QAR:3.641,SAR:3.751,USD:1,GBP:.661,EUR:.927,JOD:.709,EGP:7.871,INR:66.392};return{convertTo:function(currentCurrency,targetCurrency,amount){var exchangeRate;if(!exchangeRatesList[currentCurrency]){return false}exchangeRate=exchangeRatesList[currentCurrency]/exchangeRatesList[targetCurrency];return amount/exchangeRate}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.lib.validation",["GT.lib.util"]).directive("gtTypeDate",function(){return{priority:-1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$formatters.push(formatDate);ngModel.$parsers.unshift(parseDate);ngModel.$render=function(){var viewValue=scope.$eval(attrs.gtTypeDate);if(!viewValue)return;angular.extend(viewValue,ngModel.$viewValue)};scope.$watch(attrs.gtTypeDate,function(value){if(!value)return;if(undefined!==attrs.gtTypeDateDefaultDay&&""!==value.year&&""!==value.month&&"last"===attrs.gtTypeDateDefaultDay){value.day=new Date(value.year,value.month,0).getDate()}ngModel.$setViewValue(value)},true);function formatDate(modelValue){var dateParts=[],viewValue={day:"",month:"",year:""};if(modelValue){dateParts=modelValue.replace(/^[^\d]|[^\d]$/,"").split("-");if(0<=dateParts[2]&&31>=dateParts[2]){viewValue.day=String(dateParts[2]).replace(/^0+/,"")}if(1<=dateParts[1]&&12>=dateParts[1]){viewValue.month=String(dateParts[1]).replace(/^0+/,"")}if(1930<=dateParts[0]){viewValue.year=dateParts[0]}}return viewValue}function parseDate(viewValue){var modelValue="",date,isValid=true;if(""!==viewValue.year&&""!==viewValue.month&&""!==viewValue.day){modelValue=[viewValue.year,viewValue.month,viewValue.day].join("-");date=new Date(viewValue.year,viewValue.month-1,viewValue.day)}if(undefined!==date){if(date.getFullYear()!==+viewValue.year||date.getMonth()!==+viewValue.month-1||date.getDate()!==+viewValue.day){isValid=false}}ngModel.$setValidity("gtTypeDate",isValid);return isValid?modelValue:undefined}}}}).directive("gtTypeSameAs",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(attrs.gtTypeSameAs,function(){ngModel.$setViewValue(ngModel.$viewValue)});function validate(value){var otherFieldsValue=scope.$eval(attrs.gtTypeSameAs),isValid=!otherFieldsValue||!value||otherFieldsValue===value;ngModel.$setValidity("gt-type-same-as",isValid);return isValid?value:undefined}}}}).directive("gtTypeNumber",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(ngModel.$viewValue,function(){ngModel.$setViewValue(ngModel.$viewValue)});function validate(value){var minValue=scope.$eval(attrs.gtTypeNumberMin),isValid=true;if(value&&!/^[+-]?\d+$/.test(value)){isValid=false}if(minValue&&value&&value<minValue){isValid=false}ngModel.$setValidity("gt-type-number",isValid);if(undefined!==attrs.gtAllowInvalid){return value}return isValid?value:undefined}}}}).directive("gtTypeGreaterThan",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(attrs.gtTypeGreaterThan,function(){ngModel.$setViewValue(ngModel.$viewValue)});function validate(value){var otherFieldsValue=scope.$eval(attrs.gtTypeGreaterThan),isValid=!otherFieldsValue&&0!==otherFieldsValue||!value&&0!==value||parseInt(otherFieldsValue,10)<=parseInt(value,10);ngModel.$setValidity("gt-type-greater-than",isValid);return isValid?value:undefined}}}}).directive("gtTypeSalaryGreaterThan",function(gtCurrencyConversionService){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(ngModel.$viewValue,function(){ngModel.$setViewValue(ngModel.$viewValue)});scope.$watch(attrs.gtTypeSalaryGreaterThanCurrency,function(){ngModel.$setViewValue(ngModel.$viewValue)});function validate(value){var currency=scope.$eval(attrs.gtTypeSalaryGreaterThanCurrency),convertedSalary=gtCurrencyConversionService.convertTo(currency,"USD",value);if(!value){ngModel.$setValidity("gt-type-salary-greater-than",true);return value}convertedSalary=gtCurrencyConversionService.convertTo(currency,"USD",value);if(value&&convertedSalary&&convertedSalary>=scope.$eval(attrs.gtTypeSalaryGreaterThan)){ngModel.$setValidity("gt-type-salary-greater-than",true);return value}ngModel.$setValidity("gt-type-salary-greater-than",false);return value}}}}).directive("gtTypeTimeSpan",function(){return{priority:-1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$formatters.push(formatSpan);ngModel.$parsers.unshift(parseSpan);ngModel.$render=function(){var viewValue=scope.$eval(attrs.gtTypeTimeSpan);if(!viewValue)return;angular.extend(viewValue,ngModel.$viewValue)};scope.$watch(attrs.gtTypeTimeSpan,function(value){if(!value)return;ngModel.$setViewValue(value)},true);function formatSpan(modelValue){var viewValue={startMonth:"",startYear:"",endMonth:"",endYear:""};if(modelValue){if(1<=modelValue.startMonth&&12>=modelValue.startMonth){viewValue.startMonth=String(modelValue.startMonth).replace(/^0+/,"")}if(1930<=modelValue.startYear){viewValue.startYear=modelValue.startYear}if(1<=modelValue.endMonth&&12>=modelValue.endMonth){viewValue.endMonth=String(modelValue.endMonth).replace(/^0+/,"")}else if("Present"===modelValue.endMonth){viewValue.endMonth="Present"}if(1930<=modelValue.endYear){viewValue.endYear=modelValue.endYear}}return viewValue}function parseSpan(viewValue){var modelValue=angular.copy(viewValue),startDate=new Date(viewValue.startYear,viewValue.startMonth-1),endDate,isValid=true;if("Present"===viewValue.endMonth){endDate=new Date}else{endDate=new Date(viewValue.endYear,viewValue.endMonth-1)}if(startDate.getFullYear()!==+viewValue.startYear||startDate.getMonth()!==+viewValue.startMonth-1){isValid=false}if((endDate.getFullYear()!==+viewValue.endYear||endDate.getMonth()!==+viewValue.endMonth-1)&&"Present"!==viewValue.endMonth){isValid=false}if(startDate>=endDate){isValid=false}ngModel.$setValidity("gtTypeTimeSpan",isValid);return isValid?modelValue:undefined}}}}).directive("gtTypeEmailList",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$formatters.unshift(validate);ngModel.$parsers.unshift(validate);function validate(emails){var emailRegexp=/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}$/,isValid=true;if(undefined===emails||""===emails){isValid=false}else{angular.forEach(emails.split(","),function(valueArg){var value=valueArg.trim();if(""!==value&&!emailRegexp.test(value)){isValid=false}})}ngModel.$setValidity("gtTypeEmailList",isValid);return emails}}}}).directive("gtMinlength",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$formatters.unshift(validate);ngModel.$parsers.unshift(validate);function validate(text){var isValid=undefined===text||""===text||text.length>=attrs.gtMinlength;ngModel.$setValidity("gtMinlength",isValid);if(attrs.gtAllowInvalid!==undefined){return text}return isValid?text:undefined}}}}).directive("gtBalancedParanthesis",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(attrs.gtBalancedParanthesis,function(){ngModel.$setViewValue(ngModel.$viewValue)});function validate(text){var stack=[],inputArray=[],isValid=true;if(false!==scope.$eval(attrs.gtBalancedParanthesis)&&text){inputArray=text.split("");angular.forEach(inputArray,function(value){if(isValid){if("("===value){stack.push(value)}else if(")"===value){if(undefined===stack.pop()){isValid=false}}}});if(0<stack.length){isValid=false}}ngModel.$setValidity("gtBalancedParanthesis",isValid);if(undefined!==attrs.gtAllowInvalid){return text}return isValid?text:undefined}}}}).directive("gtEvenQuotes",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);scope.$watch(attrs.gtEvenQuotes,function(newValue){if(newValue){ngModel.$setViewValue(ngModel.$viewValue)}});function validate(text){var isValid=true,sanitisedText=String(text).replace(/[“”]/g,'"'),singleQuotes,doubleQuotes;if(false!==scope.$eval(attrs.gtEvenQuotes)&&sanitisedText){singleQuotes=sanitisedText.match(/'/g);doubleQuotes=sanitisedText.match(/"/g);if(singleQuotes&&doubleQuotes){isValid=false}else if(singleQuotes&&singleQuotes.length%2){isValid=false}else if(doubleQuotes&&doubleQuotes.length%2){isValid=false}}ngModel.$setValidity("gtEvenQuotes",isValid);return text}}}}).directive("gtTypePhone",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);function validate(number){var phoneRegexp=/^\+?[0-9,\-\s()]+$/,isValid=false;isValid=undefined===number||""===number||phoneRegexp.test(number);ngModel.$setValidity("gtTypePhone",isValid);return isValid?number:undefined}}}}).directive("gtTypeUrl",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){ngModel.$parsers.unshift(validate);function validate(text){var urlRegexp=/^(?:(?:https?|ftp):\/\/)?(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/,isValid=false;isValid=undefined===text||urlRegexp.test(text);ngModel.$setValidity("gtTypeUrl",isValid);return isValid?text:undefined}}}}).directive("gtTypeFileSize",function(){return{priority:-1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){scope.$on("uploadFile.CV:changed",function(){var isValid,maxFileSize=attrs.gtTypeFileSize||200*1024,modelValue=ngModel.$modelValue;if(modelValue[0]){isValid=modelValue[0].size<maxFileSize;ngModel.$setValidity("gtTypeFileSize",isValid)}})}}}).directive("gtTypeFileMime",function(){return{priority:-1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){scope.$on("uploadFile.CV:changed",function(){var fileTypeMap={document:"application/vnd.openxmlformats-officedocument.wordprocessingml.document",template:"application/vnd.openxmlformats-officedocument.wordprocessingml.template",msword:"application/msword",pdf:"application/pdf",rtf:"application/rtf"},isValid=false,validFileType=[],modelValue=ngModel.$modelValue;validFileType=attrs.gtTypeFileMime.split(" ");if(modelValue[0]){angular.forEach(validFileType,function(type){if(fileTypeMap[type]===modelValue[0].type){isValid=true}});ngModel.$setValidity("gtTypeFileMime",isValid)}})}}}).directive("gtTypePhoneSplit",function(){return{priority:-1e3,require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$formatters.push(formatPhone);ngModel.$parsers.unshift(parsePhone);ngModel.$render=function(){var viewValue=scope.$eval(attrs.gtTypePhoneSplit);if(!viewValue)return;angular.extend(viewValue,ngModel.$viewValue)};scope.$watch(attrs.gtTypePhoneSplit,function(value){if(!value)return;ngModel.$setViewValue(value)},true);function formatPhone(modelValue){var phoneParts=[],viewValue={country:"",area:"",number:""};if(modelValue){phoneParts=modelValue.replace(/^[^\d-]|[^\d]$/,"").split("-");viewValue.country=phoneParts[0];viewValue.area=phoneParts[1];viewValue.number=phoneParts[2]}return viewValue}function parsePhone(viewValue){var modelValue=[viewValue.country,viewValue.area,viewValue.number].join("-"),isValid=true;if("--"===modelValue)modelValue="";if(modelValue&&(50<modelValue.length||-1===modelValue.search(/^\+?\d+-\d*-\d+$/))){isValid=false}ngModel.$setValidity("gtTypePhoneSplit",isValid);return isValid?modelValue:undefined}}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch",["GT.lib.paginator","ngResource","GT.app"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchCompositeFilterController",function($scope){$scope.$on("facetedSearch.filter:changed",function(){updateFilterStatus()});updateFilterStatus();function updateFilterStatus(){var allSelected=true;angular.forEach($scope.group.items,function(group){if(!group.allFilter.selected&&""===group.dependentOn){allSelected=false}});$scope.group.allFilter.selected=allSelected}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").run(function($rootScope,$location,$browser){$browser.onUrlChange(function(){$rootScope.$broadcast("facetedSearch.hashbang:change",$location.search())})}).controller("facetedSearchFilterController",function($rootScope,$scope,facetedSearchFilterService,facetedSearchFilterInHashbang,$location){var filterGroupDefaultLimit=facetedSearchFilterService.filterGroupDefaultLimit,hashbangFilterSeparator=",";$scope.groupToggle=groupToggle;$scope.change=facetedSearchFilterService.changeFilter;$scope.filters=facetedSearchFilterService.filters;$scope.filterConfig=facetedSearchFilterService.getFilterConfig();$scope.clearAll=facetedSearchFilterService.clearAllFilters;$scope.toggleAllFilter=facetedSearchFilterService.toggleAllInGroup;$scope.clearLockedFilters=facetedSearchFilterService.clearLockedFilters;$scope.filterGroupDefaultLimit=filterGroupDefaultLimit;$scope.filterLimitMargin=2;if(facetedSearchFilterInHashbang){addFiltersToHashbang($scope.filters)}$location.replace();$scope.$on("facetedSearch.filter:changed",function(evt,data,fromHashBang){if(true!==fromHashBang&&facetedSearchFilterInHashbang){addFiltersToHashbang($scope.filters)}});$scope.$on("facetedSearch.filter:loaded",function(evt,data){if(data.isTriggered){facetedSearchFilterService.load(data.filters)}});$scope.$on("facetedSearch.hashbang:change",function(){facetedSearchFilterService.updateFromHashbang($location.search())});$scope.$on("facetedSearch.filter:changed",function(evt,data){angular.forEach($scope.filters.groups,function(group){if(group.id!==data.groupId&&true===group.overrideCustomFilter){if(group.overrideLimit===filterGroupDefaultLimit){group.overrideCustomFilter=false;group.overrideLimit=null}}})});$scope.$on("facetedSearch.filter:triggered",function(evt,data){facetedSearchFilterService.changeFilter(data.group,data.filter)});function addFiltersToHashbang(filters){facetedSearchFilterService.operateOnFilters(filters.groupsById,populateHashbangFilterParameters,{},true)}function populateHashbangFilterParameters(group){var filterParameters={};filterParameters[group.id]=[];angular.forEach(group.items,function(filter){var value;if(filter.selected){value=filter.whichItem?filter.id+"_"+filter.whichItem:filter.id;filterParameters[group.id].push(value)}});$location.search(group.id,filterParameters[group.id].join(hashbangFilterSeparator));return filterParameters}function groupToggle(currentGroup){currentGroup.collapsed=!currentGroup.collapsed;facetedSearchFilterService.persistCollapsedState(currentGroup)}}).controller("facetedSearchFilterBandController",function($scope,facetedSearchFilterService){var filters=facetedSearchFilterService.filters;$scope.selectedGroups=[];updateFilterGroupsInBand();angular.forEach(["facetedSearch.results:loaded","facetedSearch.pagination:refreshed"],function(evtName){$scope.$on(evtName,updateFilterGroupsInBand)});function updateFilterGroupsInBand(){angular.forEach(filters.groups,function(group){var indexInFilterBand=$scope.selectedGroups.indexOf(group),isFilterGroupSelected=!group.allFilter.selected;if(-1<indexInFilterBand&&isFilterGroupSelected){return}if(-1<indexInFilterBand&&!isFilterGroupSelected){$scope.selectedGroups.splice(indexInFilterBand,1)}if(-1===indexInFilterBand&&isFilterGroupSelected){$scope.selectedGroups.splice(0,0,group)}})}}).value("facetedSearchFilterInHashbang",false).value("facetedSearchApplyUrlFilters",false).value("facetedSearchResultsValue",{filters:{}}).provider("facetedSearchFilterService",function(){var filterConfig={filterGroupDefaultLimit:5,filterCollapse:{defaultCollapse:false,isStatusSaved:false,expandIfHasSelection:false,statusKey:"facetedSearch:group:collapsed",groupDefaults:{}},filterPersist:{defaultPersist:false,persistKey:"facetedSearch:group:persist",groupDefaults:{}},groupOrder:{},sortOrder:{},groupType:{}};return{setFilterConfig:function(value){angular.extend(filterConfig,value)},$get:facetedSearchFilterService};function facetedSearchFilterService(facetedSearchResultsValue,facetedSearchApplyUrlFilters,gtStorageService,$rootScope,$location){var isInitializedFromHashBang=false,service={filterGroupDefaultLimit:filterConfig.filterGroupDefaultLimit,filters:{groups:[],groupsById:{},compositeById:{}},getGroupById:function(groupId){var compositeId=getCompositeId(groupId),group;if(compositeId){group=this.filters.groupsById[compositeId].itemsById[groupId]}else{group=this.filters.groupsById[groupId]}return group},load:function(filters){var self=this;angular.forEach(filters,function(group,groupId){var currentGroup,compositeId=getCompositeId(groupId);if(compositeId){currentGroup=self.filters.groupsById[compositeId].itemsById[groupId]}else{currentGroup=self.filters.groupsById[groupId]}loadGroup(currentGroup,group,groupId)});function loadGroup(currentGroup,group,groupId){var noFilterChecked=true;if(!currentGroup)return;currentGroup.items=[];currentGroup.itemsById={};angular.forEach(group.items,function(filter){currentGroup.items.push(filter);currentGroup.itemsById[filter.id]=filter;if(filter.selected){noFilterChecked=false}if(undefined!==filterConfig.sortOrder[groupId]){filter.order=filterConfig.sortOrder[groupId][filter.id]||999}});saveSelectedFilterIds(currentGroup);currentGroup.allFilter={selected:noFilterChecked,label:group.labelEmpty}}},getSelectedFilters:getSelectedFilters,areFiltersSet:function(){var selectedFilters=getSelectedFilters(),filtersPresent=false;angular.forEach(selectedFilters,function(group){if("ALL"!==group){filtersPresent=true}});return filtersPresent},getFilterConfig:function(){return filterConfig},updateFromHashbang:function(hashbangParameters){var selectedFilters=getSelectedFilters(true),currentFilters=this.filters.groupsById,filterOperationResponse;filterOperationResponse=this.operateOnFilters(currentFilters,updateSingleBasicFilterGroupFromHashbang,{selectedFilters:selectedFilters,hashbangParameters:hashbangParameters},true,true);broadcastChange({},true);return filterOperationResponse},toggleAllInGroup:toggleAllInGroup,clearLockedFilters:function(){angular.forEach(this.filters.groups,function(group){if(!group.locked){return}toggleAllInGroup(group,true);group.overrideLimit=filterConfig.filterGroupDefaultLimit});$rootScope.$broadcast("facetedSearch.filter:clearLocked")},clearAllFilters:function(){angular.forEach(this.filters.groups,function(group){toggleAllInGroup(group,true);group.overrideLimit=filterConfig.filterGroupDefaultLimit});$rootScope.$broadcast("facetedSearch.filter:clearAll")},changeFilter:function(group,filter,forceChange){var count=0;angular.forEach(group.items,function(item){if(item.selected){if("radio"===group.filterType||"option"===group.filterType){if(item.id!==filter.id){item.selected=false}}count+=1;if(filter.whichItem){group.itemsById[filter.id].whichItem=filter.whichItem}}});group.allFilter.selected=0===count;saveSelectedFilterIds(group);if(!forceChange&&""!==group.dependentOn){if(isFilterEmpty(group.dependentOn)){return}}if(true===group.allFilter.selected){broadcastChange({groupId:group.id,value:"ALL",selected:true})}broadcastChange({groupId:group.id,value:filter.id,selected:filter.selected})},persistCollapsedState:function(group){if(!filterConfig.filterCollapse.isStatusSaved){return}gtStorageService.setItem(filterConfig.filterCollapse.statusKey,group.id,!!group.collapsed)},saveSelectedFilterIds:saveSelectedFilterIds,getPreviouslySelectedFilterItemIds:function(groupId){return gtStorageService.getItem(filterConfig.filterPersist.persistKey,groupId)},shouldCollapseGroup:function(groupId,_default){var groupStatus,hasSelection=false,filterOperationResponse,key=filterConfig.filterCollapse.statusKey,showDefault="undefined"===typeof filterConfig.filterCollapse.groupDefaults[groupId]?_default:filterConfig.filterCollapse.groupDefaults[groupId];if(filterConfig.filterCollapse.expandIfHasSelection){filterOperationResponse=this.operateOnFilters([this.filters.groupsById[groupId]],isGroupSelected,{},true);hasSelection=filterOperationResponse.hasSelection}if(hasSelection)return false;if(!filterConfig.filterCollapse.isStatusSaved){return showDefault}groupStatus=gtStorageService.getItem(key,groupId);return groupStatus?"true"===groupStatus:showDefault},isInitializedFromHashBang:function(){return isInitializedFromHashBang},operateOnFilters:function(filters,operation,inputParams,includeSubFilters,isBooleanReturn){var isOperationBooleanReturn=true===isBooleanReturn,returnResponse=isOperationBooleanReturn?false:{};angular.forEach(filters,function(group){if("composite"===group.filterType&&includeSubFilters){angular.forEach(group.items,function(subFilterGroup){returnResponse=callAndHandleResult(subFilterGroup,inputParams,returnResponse)})}else{returnResponse=callAndHandleResult(group,inputParams,returnResponse)}});function callAndHandleResult(group,params,returnResponseArg){var operationResult=operation(group,params),response=isOperationBooleanReturn?returnResponseArg||operationResult:angular.extend({},returnResponseArg,operationResult);return response}return returnResponse}};angular.forEach(facetedSearchResultsValue.filters,function(_group_,groupId){var group={label:_group_.label},filters=service.filters,currentGroupConfig,compositeId=getCompositeId(groupId),compositeFilter;if(compositeId&&""!==compositeId){compositeFilter={};if(!filters.groupsById.hasOwnProperty(compositeId)){compositeFilter={filterType:"composite",id:compositeId,order:filterConfig.groupInfo[compositeId].order,label:filterConfig.groupInfo[compositeId].label,locked:filterConfig.groupInfo[compositeId].locked,seperable:filterConfig.groupInfo[compositeId].seperable,collapsed:false,allFilter:{selected:false},items:[],itemsById:{}};filters.groupsById[compositeId]=compositeFilter;filters.groups.push(compositeFilter)}filters.groupsById[compositeId].items.push(group);filters.groupsById[compositeId].itemsById[groupId]=group;currentGroupConfig=filterConfig.groupInfo[compositeId].items[groupId];compositeFilter.collapsed=service.shouldCollapseGroup(compositeId,filterConfig.filterCollapse.defaultCollapse);group.filterType=currentGroupConfig.type||"basic";group.locked=currentGroupConfig.locked;group.collapsed=false}else{if(!(groupId in filterConfig.groupInfo)){return}filters.groupsById[groupId]=group;filters.groups.push(group);currentGroupConfig=filterConfig.groupInfo[groupId];group.filterType=currentGroupConfig.type||"basic";group.locked=currentGroupConfig.locked;group.collapsed=service.shouldCollapseGroup(groupId,filterConfig.filterCollapse.defaultCollapse)}group.id=groupId;group.order=currentGroupConfig.order||999;group.dependentOn=currentGroupConfig.dependentOn||"";group.headless=currentGroupConfig.headless;group.smartSorting=currentGroupConfig.smartSorting;group.labelForAll=filterConfig.labelForAll?filterConfig.labelForAll[groupId]:undefined;group.subheading=currentGroupConfig.subheading;group.hidden=currentGroupConfig.hidden||false;group.overrideCustomFilter=false;group.overrideLimit="overrideLimit"in currentGroupConfig?currentGroupConfig.overrideLimit:null});service.load(facetedSearchResultsValue.filters);if(facetedSearchApplyUrlFilters){isInitializedFromHashBang=service.updateFromHashbang($location.search())}angular.forEach(service.filters.groupsById,function(group){var allSelected;if("composite"===group.filterType){allSelected=true;angular.forEach(group.items,function(_group){if(!_group.allFilter.selected&&""===_group.dependentOn){allSelected=false}});group.allFilter.selected=allSelected}});return service;function isGroupSelected(group){var hasSelection=false;if(hasSelection){return true}angular.forEach(group.items,function(item){if(item.selected){hasSelection=true}});return{hasSelection:hasSelection}}function updateSingleBasicFilterGroupFromHashbang(group,inputParams){var hashbangParameters=inputParams.hashbangParameters,selectedFilters=inputParams.selectedFilters,currentGroup=hashbangParameters[group.id],idsToSelect,newFilterItem,isUpdateEffective=false;if(undefined===currentGroup)return false;idsToSelect=currentGroup.split(",");if("ALL"===selectedFilters[group.id]){angular.forEach(group.items,function(filterItem){filterItem.selected=false})}else{angular.forEach(selectedFilters[group.id],function(oldFilter){var indexInHashBang=idsToSelect.indexOf(String(oldFilter)),oldFilterPieces=isRangeFilter(group.filterType)?String(oldFilter).split("_"):[String(oldFilter)],currentFilter=group.itemsById[oldFilterPieces[0]];if(-1<indexInHashBang){idsToSelect.splice(indexInHashBang,1);return}if(undefined!==currentFilter){currentFilter.selected=false;isUpdateEffective=true}})}if(""===currentGroup){group.allFilter.selected=true;return false}angular.forEach(idsToSelect,function(id){var pieces=isRangeFilter(group.filterType)?id.split("_"):[id],currentFilter;if(undefined===currentFilter&&"freeRange"===group.filterType){newFilterItem={id:pieces[0],count:0,selected:true,label:{long:pieces[0],short:pieces[0]},whichItem:pieces[1]};group.itemsById[pieces[0]]=newFilterItem;group.items.push(newFilterItem)}currentFilter=group.itemsById[pieces[0]];if(undefined!==currentFilter){currentFilter.selected=true;isUpdateEffective=true;if(pieces[1]){currentFilter.whichItem=pieces[1]}}});group.allFilter.selected=false;return isUpdateEffective}function isFilterEmpty(groupId){var selectedFilters=getSelectedFilters(true);if(undefined===selectedFilters[groupId]||"ALL"===selectedFilters[groupId]){return true}return false}function getCompositeId(_groupId){var compositeId=false;angular.forEach(filterConfig.groupInfo,function(group,groupId){if("composite"===group.type){if(group.items.hasOwnProperty(_groupId)){compositeId=groupId}}});return compositeId}function isRangeFilter(filterType){return"range"===filterType||"freeRange"===filterType}function toggleAllInGroup(group,forceSelect){var count=0,isAllSelected=group.allFilter.selected=forceSelect||group.allFilter.selected;if("composite"===group.filterType){angular.forEach(group.items,function(_group){toggleAllInGroup(_group,forceSelect)})}else{if("country"===group.id&&service.filters.groupsById.city){toggleAllInGroup(service.filters.groupsById.city,true)}angular.forEach(group.items,function(filter){if(isAllSelected){filter.selected=false}else if(filter.selected){count+=1}});group.allFilter.selected=true;if(isAllSelected||0!==count){broadcastChange({groupId:group.id,value:"ALL",selected:true})}}}function broadcastChange(trigger,fromHashBang){var isHashbangChange=fromHashBang||false;$rootScope.$broadcast("facetedSearch.filter:changed",trigger,isHashbangChange)}function getSelectedFilters(includeSubFilters){var selectedFilters={};selectedFilters=service.operateOnFilters(service.filters.groupsById,addGroupToSelectedFilterIfSelected,{},includeSubFilters);return selectedFilters}function addGroupToSelectedFilterIfSelected(group){var selectedFilters={};if(undefined===selectedFilters[group.id]){selectedFilters[group.id]=[]}if(group.allFilter.selected){selectedFilters[group.id]="ALL";return selectedFilters}angular.forEach(group.items,function(filter){if(!filter.selected){return}if(filter.whichItem){selectedFilters[group.id].push(filter.id+"_"+filter.whichItem)}else{selectedFilters[group.id].push(filter.id)}});return selectedFilters}function saveSelectedFilterIds(group){var selectedItemIds=[],shouldPersist="undefined"===typeof filterConfig.filterPersist.groupDefaults[group.id]?filterConfig.filterPersist.defaultPersist:filterConfig.filterPersist.groupDefaults[group.id];if(!shouldPersist){return}angular.forEach(group.itemsById,function(item,id){if(item.selected){selectedItemIds.push(id)}});gtStorageService.setItem(filterConfig.filterPersist.persistKey,group.id,selectedItemIds)}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchFreeRangeFilterController",function($scope,$controller){var indexMap={min:0,max:1},minValueOld,maxValueOld;$controller("facetedSearchRangeFilterController",{$scope:$scope});updateOldValues();$scope.change=function(group,value,whichItem){var selectedItem={count:0,id:value,label:{long:value,short:value},selected:true,whichItem:whichItem},otherModel=getModel(getOppositeType(whichItem)),invalidValue=isNaN(value);if(undefined!==otherModel&&indexMap[whichItem]<indexMap[getOppositeType(whichItem)]&&parseFloat(value)>parseFloat(otherModel.id)){invalidValue=true}if(invalidValue){$scope[whichItem+"Value"]="min"===whichItem?minValueOld:maxValueOld;return}if(""===value||undefined===value){group.allFilter.selected=true;$scope.$parent.toggleAllFilter(group);if(otherModel){$scope.change(group,otherModel.id,otherModel.whichItem)}return}group.allFilter.selected=false;group.items[indexMap[whichItem]]=selectedItem;angular.forEach(group.itemsById,function(item,id){if(whichItem===item.whichItem){delete group.itemsById[id]}});group.itemsById[value]=selectedItem;updateOldValues();$scope.$parent.change(group,selectedItem)};function getModel(whichItem){if(!indexMap.hasOwnProperty(whichItem)){return null}return $scope.group.itemsById[$scope[whichItem+"Value"]]}function updateOldValues(){if($scope.minValue){minValueOld=$scope.minValue}if($scope.maxValue){maxValueOld=$scope.maxValue}}function getOppositeType(whichItem){if(!indexMap.hasOwnProperty(whichItem)){return null}return"min"===whichItem?"max":"min"}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchOptionFilterController",function($scope){$scope.change=change;updateValuesInScope();$scope.$on("facetedSearch.filter:changed",function(){updateValuesInScope()});function updateValuesInScope(){angular.forEach($scope.group.items,function(item){if(item.selected){$scope.selectedValue=item}})}function change(group,selectedItem){selectedItem.selected=true;$scope.$parent.change(group,selectedItem)}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchRangeFilterController",function($scope){var minValueOld,maxValueOld,types=["min","max"];updateRangeValuesInScope();if($scope.minValue){minValueOld=$scope.minValue}if($scope.maxValue){maxValueOld=$scope.maxValue}function updateRangeValuesInScope(){angular.forEach($scope.group.items,function(item){if(item.selected&&item.whichItem){$scope[item.whichItem+"Value"]=item.id}})}function getModel(whichItem){if(-1===types.indexOf(whichItem)){return null}return $scope.group.itemsById[$scope[whichItem+"Value"]]}function getOppositeType(whichItem){if(-1===types.indexOf(whichItem)){return null}return"min"===whichItem?"max":"min"}function change(group,value,whichItem){var otherModel,selectedItem=group.itemsById[value];if(!value){group.allFilter.selected=true;otherModel=getModel(getOppositeType(whichItem));$scope.$parent.toggleAllFilter(group);if(otherModel){change(group,otherModel.id,otherModel.whichItem)}return}if("min"===whichItem){if(minValueOld&&whichItem===group.itemsById[minValueOld].whichItem){group.itemsById[minValueOld].selected=false}minValueOld=value}else if("max"===whichItem){if(maxValueOld&&whichItem===group.itemsById[maxValueOld].whichItem){group.itemsById[maxValueOld].selected=false}maxValueOld=value}if(selectedItem){selectedItem.selected=true;selectedItem.whichItem=whichItem}$scope.$parent.change(group,selectedItem)}$scope.change=change;$scope.$on("facetedSearch.filter:changed",function(evt,data,fromHashBang){if(!fromHashBang){return}updateRangeValuesInScope()});$scope.$on("facetedSearch.filter:clearLocked",function(){if(!$scope.group.locked){return}resetRangeValues()});$scope.$on("facetedSearch.filter:clearAll",function(){resetRangeValues()});function resetRangeValues(){$scope.minValue=null;$scope.maxValue=null}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchResultsController",function($scope,gtPaginatorService,facetedSearchResultsService,facetedSearchResultsValue,facetedSearchApplyUrlFilters,facetedSearchFilterService,usSpinnerService,facetedSearchSortOrder,$timeout,$rootScope,$location){var filters=facetedSearchFilterService.filters,urlParams=$location.search(),promise,paginator;if(facetedSearchApplyUrlFilters&&facetedSearchFilterService.areFiltersSet()){$scope.isLoading=true;facetedSearchResultsValue.keyword=urlParams.keyword||facetedSearchResultsValue.keyword||"";$rootScope.$broadcast("facetedSearch.results:keywordChanged",{keyword:facetedSearchResultsValue.keyword})}promise=facetedSearchResultsService.get(facetedSearchResultsValue.keyword||"",filters);paginator=gtPaginatorService.create({totalCount:facetedSearchResultsValue.results.filtered_count,currentResults:facetedSearchResultsValue.results.data,pageSize:25,windowSize:10});$location.search("keyword",facetedSearchResultsValue.keyword||"");$scope.$on("facetedSearch.form:submitted",function(evt,data){$location.search("keyword",data.keyword)});$scope.$on("facetedSearch.hashbang:change",function(evt,data){$rootScope.$broadcast("facetedSearch.form:submitted",{keyword:data.keyword||""})});paginator.refresh=function(optionsArg,forceOrdering){var options=optionsArg||{};if(forceOrdering)facetedSearchResultsService.orderBy($scope.currentOrder,$scope.currentSort);this.init(angular.extend({results:facetedSearchResultsService.filterBy(filters).data},options));$rootScope.$broadcast("facetedSearch.pagination:refreshed")};$scope.pagination=paginator.pagination;$scope.currentOrder=facetedSearchSortOrder.type||"relevance";$scope.currentSort=facetedSearchSortOrder.reverse?-1:1;$scope.isInitialLoadComplete=false;$scope.defaultTimeout=1e3;$scope.searchKeyword=facetedSearchResultsValue.keyword;$scope.lastSearchParameters=facetedSearchResultsService.getLastSearchParameters();$scope.filterGroups=filters.groupsById;promise.then(function(){$timeout(function(){paginator.refresh(null,true);$scope.orderBy=orderBy;$scope.isInitialLoadComplete=true;$scope.isBusy=false;$scope.isLoading=false})});function orderBy(order,sort){$scope.currentOrder=order;$scope.currentSort=sort;$rootScope.$broadcast("facetedSearch.order:changed",{order:order,sort:sort});friction(function(){paginator.refresh({currentPage:1},true)})}$scope.goToPage=function(page){var trigger={type:"page",data:{page:page}};friction(function(){$rootScope.$broadcast("facetedSearch.pagination:changed");paginator.pagination.goTo(page);facetedSearchResultsService.log(filters,trigger,paginator.pagination.totalCount,paginator.pagination.currentResults.map(function(result){return result.id}))})};$scope.$on("facetedSearch.filter:changed",function(evt,data){var trigger={type:"filter",data:data};if(!$scope.isInitialLoadComplete){$scope.isBusy=true;$scope.isLoading=true}if(!$scope.isInitialLoadComplete||$scope.isLoading)return;$scope.isLoading=false;friction(function(){paginator.refresh({currentPage:1});facetedSearchResultsService.log(filters,trigger,paginator.pagination.totalCount,paginator.pagination.currentResults.map(function(result){return result.id}))})});$scope.$on("facetedSearch.form:submitted",function(evt,data){$scope.isLoading=true;$scope.searchKeyword=data.keyword;$timeout(function(){$scope.isBusy=true});facetedSearchResultsService.get(data.keyword,data.filters||filters,true,data.isLastSearchRequested||false).then(function(){$scope.currentOrder="relevance";$scope.currentSort=1;if(""===$scope.searchKeyword){$scope.currentOrder="posted_date_ts";$scope.currentSort=-1}friction(function(){paginator.refresh({currentPage:1},true);$scope.isLoading=false});$scope.lastSearchParameters=facetedSearchResultsService.getLastSearchParameters()},function(){$scope.isLoading=false})});$scope.loadLastSearch=function(){$rootScope.$broadcast("facetedSearch.form:submitted",{keyword:$scope.lastSearchParameters.keyword,filters:$scope.lastSearchParameters.filters,isLastSearchRequested:true});$rootScope.$broadcast("facetedSearch.results:lastSearchLoaded",{keyword:$scope.lastSearchParameters.keyword})};$scope.startNewSearch=function(){facetedSearchFilterService.clearAllFilters();$rootScope.$broadcast("facetedSearch.form:submitted",{keyword:""});$rootScope.$broadcast("facetedSearch.results:newSearchTriggered")};function friction(callback){$scope.isBusy=true;$timeout(function(){if("function"===typeof callback){callback()}$scope.isBusy=false},$scope.defaultTimeout)}}).value("facetedSearchSortOrder",{type:"",reverse:false}).provider("facetedSearchResultsService",function(){var resultsConfig={};return{setResultsConfig:function(value){angular.extend(resultsConfig,value)},$get:facetedSearchResultsService};function facetedSearchResultsService($rootScope,$http,$q,facetedSearchResultsValue,facetedSearchFilterService){var defaultHttpConfig={method:"GET"},httpConfig,results=null,lastKeyword=null,searchId,lastSearchParameters={},defaultParameters={search_keyword:"",version:2,limit:1e4},isResultsLoggingActive=resultsConfig.isResultsLoggingActive||false;httpConfig=angular.extend({},defaultHttpConfig,resultsConfig.httpConfig||{});return{get:function(keywordArg,filters,isTriggeredArg,isLastSearchRequestedArg,customParametersArg){var deferred=$q.defer(),parameters,customParameters,isTriggered,isLastSearchRequested,keyword;customParameters=angular.extend({},facetedSearchResultsValue.custom_params||{},customParametersArg||{});isTriggered=isTriggeredArg||false;isLastSearchRequested=isLastSearchRequestedArg||false;keyword=keywordArg||"";if(!resultsConfig.manualTrigger&&keyword===lastKeyword&&results){deferred.resolve(results)}else{parameters={"config[results]":"UNFILTERED","config[filters]":"ENABLED",condensed:Boolean(resultsConfig.condensed)};if(isTriggered){parameters["trigger[type]"]="SEARCH";parameters["trigger[keyword]"]=keyword}if(filters){addFilterParameters(parameters,filters)}if(keyword){addKeywordsParameters(parameters,keyword)}lastKeyword=keyword;results=deferred.promise;parameters=angular.extend({},defaultParameters,parameters,customParameters);$http(getHttpConfig(parameters,httpConfig)).success(function(response){if(0!==response.results.filtered_count&&false===isLastSearchRequested){lastSearchParameters={keyword:keyword,filters:response.filters}}results=response.results;searchId=response.id;deferred.resolve(results);$rootScope.$broadcast("facetedSearch.results:loaded");$rootScope.$broadcast("facetedSearch.filter:loaded",{filters:isLastSearchRequested?lastSearchParameters.filters:response.filters,isTriggered:isTriggered})})}return deferred.promise},getLastSearchParameters:function(){return lastSearchParameters},getLastSearchResults:function(){return $q.when(results||facetedSearchResultsValue.results)},log:function(filters,trigger,count,listedResultIds){var triggerMap={filter:function(parameters,data){parameters["trigger[type]"]="FILTER_CHANGE";parameters["trigger[filter]["+data.groupId+"]"]=data.value},page:function(parameters,data){parameters["trigger[type]"]="PAGE_CHANGE";parameters["trigger[page]"]=data.page}},parameters={search_id:searchId,keyword:lastKeyword,results_count:count,"config[results]":"NONE","config[filters]":"DISABLED",stat_items:isResultsLoggingActive?listedResultIds:null};if(trigger&&trigger.type&&triggerMap[trigger.type]){triggerMap[trigger.type](parameters,trigger.data)}addFilterParameters(parameters,filters);parameters=angular.extend({},defaultParameters,parameters);$http(getHttpConfig(parameters,httpConfig))},orderBy:function(orderArg,sortArg){var order=orderArg||"relevance",sort=sortArg||-1;order=order.split(",");order.push("id");results.data=results.data.sort(function(a,b){var i,sortFactor;for(i=0;i<order.length;i++){if(a[order[i]]!==b[order[i]]){sortFactor=(a[order[i]]<b[order[i]]?-1:1)*sort;break}}return sortFactor});return results},filterBy:function(filters){var activeFilters={},filteredData=[],resultData=[];if(resultsConfig.minLoadSearch){angular.forEach(facetedSearchResultsValue.results.data,function(searchEntity){angular.forEach(results.data,function(searchEntityId){if(searchEntityId===searchEntity.id){resultData.push(searchEntity)}})})}else{resultData=results.data}angular.forEach(filters.groupsById,function(group,groupId){angular.forEach(group.items,function(filter){if(filter.selected){if(!activeFilters[groupId])activeFilters[groupId]={};activeFilters[groupId][filter.id]=true}filter.count=0})});angular.forEach(resultData,function(result){var excludedByCount=0,excludedByIds={},groupId,filter,filterItems;function excludeCallback(value,key){var resultValue=parseInt(result[groupId+"_id"],10),keyValue=parseInt(key,10);if("min"===filters.groupsById[groupId].itemsById[key].whichItem){if(isNaN(resultValue)||resultValue<keyValue){excludedByCount+=1}}else if("max"===filters.groupsById[groupId].itemsById[key].whichItem){if(isNaN(resultValue)||resultValue>keyValue){excludedByCount+=1}}}function resetExcludeCallback(resultGroupId){if(activeFilters[groupId][resultGroupId]){excludedByIds[groupId]=false}}for(groupId in activeFilters){if("range"===filters.groupsById[groupId].filterType){angular.forEach(activeFilters[groupId],excludeCallback)}else{if(angular.isArray(result[groupId+"_id"])){excludedByIds[groupId]=true;angular.forEach(result[groupId+"_id"],resetExcludeCallback);if(excludedByIds[groupId]){excludedByCount+=1}}if(!angular.isArray(result[groupId+"_id"])&&!activeFilters[groupId][result[groupId+"_id"]]){excludedByCount+=1;excludedByIds[groupId]=true}}}function updateCounterOrExludeOnlyByGroup(filterData){filter=filters.groupsById[groupId].itemsById[filterData];if(filter&&(!excludedByCount||1===excludedByCount&&excludedByIds[groupId])){filter.count+=1}}for(groupId in filters.groupsById){if("range"!==filters.groupsById[groupId].filterType){filterItems=result[groupId+"_id"];if(filterItems&&angular.isArray(filterItems)){angular.forEach(filterItems,updateCounterOrExludeOnlyByGroup)}else if(filterItems){filter=filters.groupsById[groupId].itemsById[filterItems];if(filter&&(!excludedByCount||1===excludedByCount&&excludedByIds[groupId])){filter.count+=1}}}}if(!excludedByCount){filteredData.push(result)}});return{total:filteredData.length,data:filteredData}}};function getHttpConfig(parameters,httpConfiguration){var result={};if("POST"===httpConfiguration.method){angular.extend(result,httpConfiguration,{data:parameters})}else{angular.extend(result,httpConfiguration,{params:angular.extend({},httpConfiguration.params,parameters)})}return result}function addFilterParameters(parameters,filters){angular.extend(parameters,facetedSearchFilterService.operateOnFilters(filters.groupsById,addSelectedIdsToFilterParameters,{},true))}function addSelectedIdsToFilterParameters(group){var i=0,id,parameters={};angular.forEach(group.items,function(filter){if(filter.selected){id=filter.whichItem?filter.whichItem:i;i+=1;parameters["filters["+group.id+"]["+id+"]"]=filter.id}});return parameters}function addKeywordsParameters(parameters,keyword){if(angular.isObject(keyword)){angular.extend(parameters,keyword)}else{angular.extend(parameters,{search_keyword:keyword})}return parameters}}}).controller("facetedSearchFormController",function($rootScope,$scope,facetedSearchResultsValue,facetedSearchFilterService){$scope.submit=submit;$scope.keyword=facetedSearchResultsValue.keyword||"";$scope.$on("facetedSearch.results:lastSearchLoaded",function(evt,data){$scope.keyword=data.keyword});$scope.$on("facetedSearch.results:keywordChanged",function(evt,data){$scope.keyword=data.keyword});$scope.$on("facetedSearch.results:newSearchTriggered",function(){$scope.keyword=""});$scope.$on("facetedSearch.form:submitted",function(evt,data){if($scope.keyword===data.keyword)return;$scope.keyword=data.keyword});function submit(){if(""!==$scope.keyword){$rootScope.$broadcast("facetedSearch.form:submitted",{keyword:$scope.keyword})}}$scope.startNewSearch=function(){facetedSearchFilterService.clearAllFilters();$scope.keyword="";$rootScope.$broadcast("facetedSearch.form:submitted",{keyword:$scope.keyword})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.facetedSearch").controller("facetedSearchTypeaheadFilterController",function($scope,$filter){var filterGroupDefaultLimit=5;$scope.filteredItems={};$scope.filterItems=filterItems;$scope.updateFilteredItems=function(group,item){item.selected=true;$scope.filteredItems[group.id].push(item);$scope.selectedItem="";$scope.$emit("facetedSearch.filter:triggered",{group:group,filter:item})};$scope.$on("facetedSearch.typeahead:updateFilteredItems",function(evt,group){filterItems(group)});function filterItems(group){if(group.smartSorting&&!group.allFilter.selected){group.items.forEach(function(item,index){if(item.selected){group.items.splice(index,1);group.items.unshift(item)}})}$scope.filteredItems[group.id]=$filter("gtLimitToLastSelected")(group.items,filterGroupDefaultLimit,group.overrideCustomFilter,group.overrideLimit)}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.salary.titles",["ngResource","ui.bootstrap"]).controller("salarySearchWidgetController",function($scope,salaryTitlesListService){$scope.country="AE";$scope.typeaheadLimit=10;$scope.salaryTitleList={};salaryTitlesListService.get().then(function(salaryTitleList){var result=Object.keys(salaryTitleList).map(function(key){var countryTitles={};countryTitles[key]=salaryTitleList[key].map(function(title){return title.name});return countryTitles});$scope.salaryTitleList=result.reduce(function(titles,item){var key=Object.keys(item)[0];titles[key]=item[key];return titles},{})})}).filter("limitSalaryListToCountry",function(){return function(input,countryCode){return input[countryCode]||{}}}).factory("salaryTitlesListService",function($resource,$q){var salaryTitlesResource=$resource("/api/salary/titles"),salaryTitlesList=null;return{get:function(){var deferred=$q.defer();if(null!==salaryTitlesList){deferred.resolve(salaryTitlesList);return deferred.promise}salaryTitlesResource.get(function(response){salaryTitlesList=response.data;deferred.resolve(salaryTitlesList)},function(error){deferred.reject(error)});return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.jobSearch.titles",["ngResource","ui.bootstrap"]).controller("jobSearchWidgetController",function($scope,jobTitlesListService){$scope.jobTitleList={};$scope.typeaheadLimit=10;jobTitlesListService.get().then(function(jobTitleList){$scope.jobTitleList=jobTitleList})}).factory("jobTitlesListService",function($resource,$q){var jobSearchPhrasesResource=$resource("/api/jobs/suggestions"),jobTitlesResource=$resource("/api/jobs/titles"),jobTitlesList=null;return{get:function(){var deferred=$q.defer();if(null!==jobTitlesList){deferred.resolve(jobTitlesList);return deferred.promise}jobSearchPhrasesResource.get(function(response){jobTitlesList=response.suggestions;deferred.resolve(jobTitlesList)},function(error){deferred.reject(error)});return deferred.promise},search:function(search){var deferred=$q.defer();jobTitlesResource.get({version:2,search:search},function(response){deferred.resolve(true===response.success?response.suggestions:[])},function(error){deferred.reject(error)});return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.refer",[]).directive("gtReferForm",function($modal){return{restrict:"A",scope:{referBefore:"@",referType:"@",referDescription:"@",referLabel:"@",referUrl:"@",referGeneratedFrom:"@",referHeading:"@"},link:function(scope,element){element.bind("click",function(e){e.preventDefault();if(scope.referBefore){scope.$parent.$apply(scope.referBefore)}scope.$apply(function(){$modal.open({templateUrl:"/_partials/referForm",controller:"referFormModalController",resolve:{data:function(){return scope}}})})})}}}).controller("referFormModalController",function($http,$scope,data,$modalInstance,flashBag){$scope.isEmailSent=false;$scope.form={};$scope.heading=data.referHeading;$scope.referType=data.referType;$scope.description=angular.fromJson(data.referDescription);$scope.submit=function(){$http.post("/api/contact/refermail/sent",{form_data:$scope.form,refer_type:$scope.referType,additional_twig_params:{description:$scope.description,query_param:{refer_generated_from:data.referGeneratedFrom,refer_label:data.referLabel,refer_url:data.referUrl}}}).success(function(){$scope.isEmailSent=true}).error(function(){$modalInstance.dismiss();flashBag.add("error","An error occured while sending the email(s). Please try again!")})};$scope.toggleForm=function(){$scope.isEmailSent=!$scope.isEmailSent}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.contactForms",["GT.lib.ui","GT.lib.bridge","GT.app"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.contactForms").controller("contactFormsAdvertiseController",function($scope,contactFormsEmailForAdvertiseService){$scope.form={};$scope.isFormSubmitted=false;$scope.isEmailSent=false;$scope.submit=function(){contactFormsEmailForAdvertiseService.send($scope.form).then(function(response){$scope.isFormSubmitted=true;if(response.success){$scope.isEmailSent=true}else{$scope.isEmailSent=false}},function(){$scope.isEmailSent=false})}}).factory("contactFormsEmailForAdvertiseService",function($resource,$q){var emailResource=$resource("/api/pages/enquiry_email",{},{update:{method:"POST",params:{_method:"PUT"}}});return{send:function(data){var deferred=$q.defer();emailResource.update(data,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}}).directive("contactFormsAdvertiseWithUsFormModal",function($modal){return{link:function(scope,element){element.bind("click",function(){scope.$apply(function(){$modal.open({templateUrl:"advertise-with-us-form.html",controller:"contactFormsAdvertiseController"})})})}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.contactForms").controller("contactFormsContactUsController",function($scope,$http,flashBag,$location,contactFormsContactUsDataService,$rootScope){$scope.$on("$routeChangeSuccess",function(event,routeData){if(undefined!==routeData.$$route){$scope.selectedTab=routeData.$$route.selectedTab}});$scope.submit=function(){contactFormsContactUsDataService.submit($location.absUrl(),$scope.form);$rootScope.$broadcast("contactForms.contactUs:submitted")}}).directive("gtModalContactFormsContactUs",function($modal){return{link:function(scope,element){var modalInstance;element.bind("click",function(){scope.$apply(function(){modalInstance=$modal.open({templateUrl:"/_partials/contactUsForm",controller:"contactFormsContactUsController"})})});scope.$on("contactForms.contactUs:submitted",function(){modalInstance.dismiss()})}}}).factory("contactFormsContactUsDataService",function($http,flashBag){return{submit:function(url,content){$http.post("/api/contact/contact-us-email",angular.extend({source:url},content)).then(function(){flashBag.add("success","Your message has been sent to our team. We will get back to you shortly.")},function(){flashBag.add("error","An error occurred while submitting your concern. Please try again!")})}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.contactForms").controller("contactFormsEnquiryController",function($scope,$http,gtGAService,gtTaboolaService,sessionUserType){$scope.form={mode:"enquiry",platform:"desktop"};$scope.enquirySent=false;if("employer"===sessionUserType){$http.get("/api/employers/me").success(function(response){var employer=response.employer,user=response.rep,data={name:user.first_name+" "+user.last_name,job_title:user.job_title,company_name:employer.name,location:employer.employer_location.key,email_id:user.email};Object.assign($scope.form,data)})}gtGAService.trackEvent("EmployerEnquiry","Enquiry Form","opened");$scope.submit=function(){gtGAService.trackEvent("EmployerEnquiry","Enquiry Form","filled");$http.post("/api/employers/enquire",$scope.form).then(function(){$scope.enquirySent=true;gtGAService.trackEvent("EmployerEnquiry","Enquiry Form","submitted");gtTaboolaService.trackEvent("hr_professional_registration")})}}).directive("gtModalContactFormsEnquiry",function($modal){return{link:function(scope,element){var isModalOpen=false,modalInstance;element.bind("click",function(){if(true===isModalOpen)return;scope.$apply(function(){modalInstance=$modal.open({templateUrl:"/_partials/employerEnquiry"});isModalOpen=true;modalInstance.result.then(function(){isModalOpen=false},function(){isModalOpen=false})})})}}}).controller("contactFormsCatalogEnquiryController",function($scope,$http){$scope.form={catalog_types:{}};$scope.enquirySent=false;$scope.enquiryError=false;$scope.submit=function(){$http.post("/api/contact/catalog/enquiry",$scope.form).then(function(){$scope.enquirySent=true},function(){$scope.enquiryError=true})}}).controller("contactFormsSalaryToolEnquiryController",function($scope,$http){$scope.form={mode:"enquiry",platform:"desktop"};$scope.enquirySent=false;$scope.enquiryError=false;$scope.submit=function(){$http.post("/api/employers/enquire",$scope.form).then(function(){$scope.enquirySent=true},function(){$scope.enquiryError=true})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.contactForms").controller("contactFormsMailpoolSubscriptionController",function($scope,$http,flashBag){$scope.form={};$scope.isUserDuplicate=false;$scope.isEmailSent=false;$scope.submit=function(){$http.post("/api/contact/mailpool",$scope.form).success(function(response){if(false===response.success){$scope.isUserDuplicate=true}else{$scope.form.subject="Registered for HR Zone Updates -- "+$scope.form.company;$http.post("/api/contact/internalmail/sent",{email_type:"canHRZone-Subscribe",form_data:$scope.form});$http.post("/api/contact/mailpool/sent",{form_data:$scope.form,email_to:$scope.form.email,subject:"Your Registration to GulfTalent updates"}).success(function(){$scope.isEmailSent=true}).error(function(){$scope.$emit("staticModal:close")})}}).error(function(){$scope.$emit("staticModal:close");flashBag.add("error","An error occurred while submitting the form. Please try again!")})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.employerSupport",[]).controller("employerSupportFormController",function($scope,$http,flashBag){$scope.form={};$scope.isEmailSent=false;$scope.submit=function(){$http.post("/api/contact/internalmail/sent",{email_type:"employer-support-email",form_data:$scope.form}).then(function(){$scope.isEmailSent=true},function(){$scope.$emit("staticModal:close");flashBag.add("error","An error occurred while submitting the form. Please try again!")})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.gtFacebook",["GT.app"]).directive("gtFacebookRegisterCandidate",function($rootScope,$window,gtFacebookService,flashBag){return{link:function(scope,element,attrs){element.bind("click",function(){scope.$apply(function(){if("connected"===gtFacebookService.getLoginStatus()){registerCandidate()}else{gtFacebookService.authenticateApplication().then(registerCandidate)}function registerCandidate(){var registrationData=scope.$eval(attrs.gtFacebookRegisterCandidateData),url,flashMessageKey;gtFacebookService.register(registrationData).then(function(response){if("false"===attrs.gtFacebookRegisterCandidateReload){$rootScope.$broadcast("gtFacebook.registerCandidate:finished",response)}else{if(registrationData.registration_path_prefix){url="/"+registrationData.registration_path_prefix+"/register/"+registrationData.registration_path}else{url="/register/"+registrationData.registration_path+"/profile"}addUrlParamsAndRedirect(url)}},function(response){if(registrationData.registration_path_prefix){url="/"+registrationData.registration_path_prefix+"/register/"+registrationData.current_path}else{url="/register/"+registrationData.registration_path}if("DUPLICATE"===response.data.errors.username){flashMessageKey="candidate-duplicate-account"}else{flashMessageKey="candidate-fb-connection-error"}flashBag.save(flashMessageKey).then(function(){addUrlParamsAndRedirect(url)},function(){addUrlParamsAndRedirect(url)})})}function addUrlParamsAndRedirect(urlArg){var url=urlArg;if(undefined!==attrs.gtFacebookRegisterCandidateUrlParams){url+="?"+attrs.gtFacebookRegisterCandidateUrlParams}$window.location.href=url}})})}}}).directive("gtFacebookConnectCandidate",function($rootScope,$window,gtFacebookService,flashBag){return{link:function(scope,element){element.bind("click",function(){scope.$apply(function(){if("connected"===gtFacebookService.getLoginStatus()){connectCandidate()}else{gtFacebookService.authenticateApplication().then(connectCandidate)}function connectCandidate(){gtFacebookService.connect().then(function(){flashBag.save("candidate-fb-link-success").then(function(){$window.location.reload()},function(){$window.location.reload()})},function(response){if(1041===response.data.code){flashBag.add("error","Connection failed. This Facebook account is already connected "+"with another user account.")}else{flashBag.add("error","There was an error in connection with Facebook. Please try again.")}})}})})}}}).directive("gtFacebookGetUserData",function($rootScope,gtFacebookService,flashBag){return{link:function(scope,element){element.bind("click",function(){scope.$apply(function(){if("connected"===gtFacebookService.getLoginStatus()){broadcastUserInformation()}else{gtFacebookService.authenticateApplication().then(broadcastUserInformation)}function broadcastUserInformation(){gtFacebookService.getUserInformation().then(function(response){$rootScope.$broadcast("gtFacebook.getUserData:triggered",response)},function(){flashBag.add("error","There was an error in connection with Facebook. Please try again.")})}})})}}}).directive("gtFacebookLoginCandidate",function($rootScope,$window,gtFacebookService){return{link:function(scope,element){element.bind("click",function(){scope.$apply(function(){if("connected"===gtFacebookService.getLoginStatus()){loginCandidate()}else{gtFacebookService.authenticateApplication().then(loginCandidate)}function loginCandidate(){gtFacebookService.login().then(function(){scope.$emit("login.candidate:success");$rootScope.$broadcast("login.candidate:postSuccess")})}})})}}}).value("gtFacebookAppId",0).factory("gtFacebookService",function($window,$rootScope,$q,gtFacebookAppId,$timeout,$resource){var userFbLoginStatus="unknown",fbServiceDeferred=$q.defer(),fbServicePromise=fbServiceDeferred.promise,fbServiceWatcher,fbAccessToken,fbLoginResource=$resource("/api/candidates/facebook/login"),fbRegisterResource=$resource("/api/candidates/facebook/registration"),fbConnectResource=$resource("/api/candidates/facebook/link"),service={authenticateApplication:function(){var deferred=$q.defer();fbServicePromise.then(function(fbService){fbService.login(function(response){$timeout(function(){if(response.authResponse){deferred.resolve()}else{deferred.reject()}})},{scope:"email, user_location"})},function(){deferred.reject()});return deferred.promise},getUserInformation:function(){var deferred=$q.defer();fbServicePromise.then(function(fbService){fbService.api("/me",function(response){$timeout(function(){if(!response||response.error){deferred.reject(response)}else{deferred.resolve(response)}})},{scope:"email, user_location"})},function(){deferred.reject()});return deferred.promise},login:function(){var deferred=$q.defer();fbLoginResource.save({},{access_token:fbAccessToken},function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise},register:function(registrationData){var deferred=$q.defer(),apiParams=angular.extend({},{access_token:fbAccessToken},registrationData);fbRegisterResource.save({},apiParams,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise},connect:function(){var deferred=$q.defer();fbConnectResource.save({},{access_token:fbAccessToken},function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise},getLoginStatus:function(){return userFbLoginStatus}};fbServiceWatcher=$rootScope.$watch(function(){return $window.FB},function(fbService){if(undefined!==fbService){initializeFacebook();fbServiceWatcher()}});$timeout(function(){if(undefined===$window.FB){fbServiceDeferred.reject();fbServiceWatcher()}},1e4);return service;function initializeFacebook(){$window.FB.init({appId:gtFacebookAppId,status:true,cookie:true,version:"v2.7"});$window.FB.getLoginStatus(function(response){userFbLoginStatus=response.status;if("connected"===response.status){fbAccessToken=response.authResponse.accessToken}});$window.FB.Event.subscribe("auth.statusChange",function(response){userFbLoginStatus=response.status;if(response.authResponse){fbAccessToken=response.authResponse.accessToken}});fbServiceDeferred.resolve($window.FB)}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app",["ui.bootstrap","GT.lib.bootstrap","GT.lib.password","GT.lib.login","GT.lib.ui","GT.lib.ads","GT.lib.filters","GT.lib.social","GT.app.salary.titles","GT.app.jobSearch.titles","GT.app.widget","GT.app.refer","GT.app.employerSupport","GT.lib.session","GT.lib.validation","GT.lib.log","GT.app.contactForms","GT.app.gtFacebook","GT.app.candidateRegistration","angular-interval","angular-img-cropper"]).config(function($locationProvider){$locationProvider.hashPrefix("!").html5Mode(false)}).config(function($modalProvider){$modalProvider.options.backdrop="static"}).config(function($tooltipProvider){$tooltipProvider.options({popupDelay:250,placement:"bottom",trigger:"mouseenter"})}).config(function($provide){$provide.decorator("$modalStack",function($delegate,$document,$window,$rootScope){var open=$delegate.open,close=$delegate.close,dismiss=$delegate.dismiss,scrollbarWidth=0,jqBody=angular.element($document[0].body);$delegate.open=function(){var isFirstModal=!this.getTop();if(isFirstModal)checkScrollbar();open.apply(this,arguments);if(isFirstModal)setScrollbar()};$delegate.close=wrapMethod(close);$delegate.dismiss=wrapMethod(dismiss);return $delegate;function wrapMethod(method){return function(){var modal=this.getTop(),wrapperArgs=arguments,self=this;$rootScope.$on("$modalStack.close:transitionend",function(evt,data){if(data.modal===modal){method.apply(self,wrapperArgs);if(!self.getTop())resetScrollbar()}});$rootScope.$broadcast("$modalStack.close:before",{modal:modal})}}function checkScrollbar(){if(jqBody[0].clientWidth>=$window.innerWidth)return;scrollbarWidth=scrollbarWidth||measureScrollbar()}function setScrollbar(){var bodyPad=parseInt(jqBody.css("padding-right")||0,10);if(scrollbarWidth){jqBody.css("padding-right",bodyPad+scrollbarWidth+"px")}}function resetScrollbar(){jqBody.css("padding-right","")}function measureScrollbar(){var scrollDiv=$document[0].createElement("div"),measuredWidth;scrollDiv.className="modal-scrollbar-measure";jqBody.append(scrollDiv);measuredWidth=scrollDiv.offsetWidth-scrollDiv.clientWidth;jqBody[0].removeChild(scrollDiv);return measuredWidth}});$provide.decorator("modalWindowDirective",function($delegate,$window,$modalStack,browserFeatureDetector){var directive=$delegate[0],link=directive.link;directive.templateUrl="template/modal/customWindow.html";directive.compile=function(){return function(scope,element){var modalDialog=element[0].querySelector(".modal-dialog"),elemDialog=angular.element(modalDialog),origMarginTop=elemDialog.css("margin-top"),windowHeight=$window.innerHeight||$window.document.documentElement.clientHeight,modal=$modalStack.getTop();link.apply(null,arguments);scope.closeImmediately=function(evt){evt.preventDefault();evt.stopPropagation();$modalStack.dismiss(modal.key,"clicked on close icon")};scope.$on("$modalStack.close:before",function(evt,data){if(modal===data.modal){if(browserFeatureDetector.isCSSFeatureEnabled("transition")){scope.animate=false;element.bind("transitionend oTransitionEnd webkitTransitionEnd",function(){scope.$apply(onTransitionEnd)})}else{onTransitionEnd()}}});scope.$watch(function(){return modalDialog.offsetHeight},function(newValue,oldValue,currScope){currScope.$evalAsync(function(){var offset=Math.floor((windowHeight-newValue)/2);if(0<offset&&!(element.hasClass("modal-fixed-top")||elemDialog[0].querySelector("img"))){elemDialog.css("margin-top",offset+"px")}else{elemDialog.css("margin-top",origMarginTop)}})});function onTransitionEnd(){scope.$emit("$modalStack.close:transitionend",{modal:modal})}}};return $delegate});$provide.decorator("modalBackdropDirective",function($delegate,$modalStack){var directive=$delegate[0],link=directive.link;directive.templateUrl="template/modal/customBackdrop.html";directive.compile=function(){return function(scope){var modal=$modalStack.getTop();scope.$on("$modalStack.close:before",function(evt,data){if(modal===data.modal){scope.animate=false}});link.apply(this,arguments)}};return $delegate})}).run(function($templateCache){$templateCache.put("template/modal/customWindow.html",'<div tabindex="-1" class="modal fade {{ windowClass }}" '+'ng-class="{in: animate}" '+"ng-style=\"{'z-index': 1050 + index*10, display: 'block'}\" "+'ng-click="close($event)">'+'<div class="modal-dialog"><div class="modal-content" ng-transclude></div></div>'+'<div class="close close-outer" '+'ng-click="closeImmediately($event)" '+"ng-style=\"{'z-index': 1051 + index*10 }\">"+'<i class="fa fa-remove hidden-print"></i>'+"</div>"+"</div>");$templateCache.put("template/modal/customBackdrop.html",'<div class="modal-backdrop fade" '+'ng-class="{in: animate}" '+"ng-style=\"{'z-index': 1040 + index*10 + (index && 1 || 0)}\">"+"</div>")})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget",["ngResource","GT.lib.googleChart"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").controller("widgetFaqsCategoriesController",function($scope,$rootScope){$scope.getCategoryQuestions=function(categoryId){$rootScope.$broadcast("widget.faqsCategories:selected",{id:categoryId})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").controller("widgetConversationsCountController",function($scope){angular.forEach(["candidateConversations.conversations:updated","empTools.conversations:updated"],function(evtName){$scope.$on(evtName,function(evt,unreadCount){$scope.unreadConversationsCount=unreadCount})})})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").controller("widgetCvCompletenessController",function($scope,$timeout,$modal,$templateCache){$timeout(updateTopPercentileFlag);$scope.$on("candidate.cvCompleteness:loaded",function(evt,data){$scope.cvCompletePercentage=data.percentageComplete;if(data.percentileResult.percentile&&null!==data.percentileResult.percentile){$scope.categoryName=data.percentileResult.category_name;$scope.percentileRank=data.percentileResult.percentile;updateTopPercentileFlag()}else{$scope.percentileRank=0}});function updateTopPercentileFlag(){$scope.isTopPercentile=80<$scope.percentileRank}$scope.openCvPreview=function(){var partialUrl="candidateCV",templateCacheUrl="/_partials/"+partialUrl;if($templateCache.get(templateCacheUrl)){$templateCache.remove(templateCacheUrl)}$modal.open({template:'<div ng-include="partialUrl"></div>',controller:"gtModalStaticController",windowClass:"modal-window-lg",resolve:{modalInfo:function(){return{partial:partialUrl}}}})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").factory("widgetCVOverviewCountService",function($q,$resource){var cvResource=$resource("/api/candidates/me/cvs/me"),cvReferenceResource=$resource("/api/candidates/me/references");return{get:function(){var deferred=$q.defer();$q.all([getSectionCount(),getReferenceCount()]).then(function(data){var cvOverviewCounts;cvOverviewCounts=data[0];cvOverviewCounts.references=data[1];deferred.resolve(cvOverviewCounts)},function(error){deferred.reject(error)});return deferred.promise}};function getSectionCount(){var deferred=$q.defer();cvResource.get({},function(response){var permissionsCount=0,cvCounter={};angular.forEach(response.cv,function(value,key){cvCounter[key]=value.length});cvCounter.comments=response.comments&&response.comments.length||"";angular.forEach(response.permissions,function(){permissionsCount+=1});cvCounter.permissions=permissionsCount;deferred.resolve(cvCounter)},function(error){deferred.reject(error)});return deferred.promise}function getReferenceCount(){var deferred=$q.defer();cvReferenceResource.get({},function(response){var referenceCount=0;angular.forEach(response.references,function(){referenceCount+=1});deferred.resolve(referenceCount)},function(error){deferred.reject(error)});return deferred.promise}}).controller("widgetCVOverviewController",function($scope,$rootScope,widgetCVOverviewCountService){getCVOverviewCount();$rootScope.$on("widget.cvOverview:reload",function(){getCVOverviewCount()});function getCVOverviewCount(){widgetCVOverviewCountService.get().then(function(data){$scope.widgetcvOverviewCount=data})}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").directive("gtCvPhoto",function($window,$modal,gtImageProcessingService,browserFeatureDetector){return{link:function(scope,element,attrs){if(browserFeatureDetector.isCanvasSupported()){gtImageProcessingService.convertImgToBase64URL(attrs.gtCvPhoto).then(function(base64Img){scope.sourceImage=base64Img;bindClickListener()})}else{scope.sourceImage=attrs.gtCvPhoto;bindClickListener()}function bindClickListener(){element.bind("click",function(){scope.$apply(function(){$modal.open({templateUrl:"/_partials/cvPhoto",controller:"widgetUploadPhotoController",resolve:{widgetInfo:function(){return{sourceImage:scope.sourceImage,editMode:attrs.gtCvPhotoType}}}})})})}}}}).controller("widgetUploadPhotoController",function($scope,widgetInfo,browserFeatureDetector,candidatesPhotoService,$modalInstance,$window,flashBag){$scope.sourceImage=widgetInfo.sourceImage;$scope.editMode=widgetInfo.editMode;$scope.activeTab="edit";$scope.hasUploadedPhoto="add"!==$scope.editMode;$scope.isDynamicUploadEnabled=browserFeatureDetector.isCanvasSupported()&&browserFeatureDetector.isFileApiSupported();$scope.bounds={left:0,right:0,top:0,bottom:0};$scope.$on("widget.cvPhoto:changed",function(){$scope.editMode="edit"});$scope.deletePhoto=function(){var errorMessage="Your profile photo couldn't  been deleted.";candidatesPhotoService.remove().then(function(response){if(response.success){reloadWithMessage("photo-deleted");return}dismissWithMessage("warning",errorMessage)},function(){dismissWithMessage("warning",errorMessage)})};function reloadWithMessage(messageKey){flashBag.save(messageKey).then(function(){$window.location.reload()},function(){$window.location.reload()})}function dismissWithMessage(type,message){flashBag.add(type,message);$modalInstance.dismiss()}}).provider("candidatesPhotoService",function(){return{$get:candidatesPhotoService};function candidatesPhotoService($resource,$q){var photoResource=$resource("/api/candidates/photo",null,{remove:{method:"POST",params:{_method:"DELETE"}}}),service={remove:function(){var deferred=$q.defer();photoResource.remove(null,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}};return service}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").controller("widgetFeedbackController",function($scope,$timeout,widgetFeedbackService,$window){var widgetTimeout=5e3,timeoutPromise;$scope.form={};$scope.formSubmitted=false;$scope.form.source=$window.location.href;$scope.$on("gtCollapse.feedback:collapsed",function(){$scope.formSubmitted=false;$timeout.cancel(timeoutPromise)});$scope.submit=function(){widgetFeedbackService.submit($scope.form).then(function(){$scope.formSubmitted=true;$scope.successFlag=true;$scope.form.message="";autoCollapse()},function(){$scope.formSubmitted=true;$scope.successFlag=false;autoCollapse()})};function autoCollapse(){timeoutPromise=$timeout(function(){$scope.isWidgetCollapsed=true},widgetTimeout)}}).factory("widgetFeedbackService",function($resource,$q){var feedbackResource=$resource("/api/contact/contact-us-email");return{submit:function(content){var deferred=$q.defer();feedbackResource.save({},content,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.widget").controller("widgetUploadFileController",function($scope,$window,$rootScope){var userAgent=$window.navigator.userAgent,isltIE11=0<userAgent.indexOf("MSIE"),isIE11=!!userAgent.match(/Trident.*rv[ :]*11\./);$scope.hasFlash=true;if(undefined!==$window.FileAPI.hasFlash){$scope.hasFlash=$window.FileAPI.hasFlash}$scope.isIE=isltIE11||isIE11;$scope.$watch("file",function(newFile){$scope.fileType=undefined===$scope.fileType?"file":$scope.fileType;$rootScope.$broadcast("uploadFile."+$scope.fileType+":changed",newFile)})})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidateRegistration",["ngResource","ngCookies","GT.lib.ui","GT.lib.paginator","GT.lib.bridge","GT.lib.validation","GT.lib.login","GT.app.candidates","GT.app.candidateBookmarks","GT.app.gtFacebook","GT.app.cvReview","GT.app.companies"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidateRegistration").controller("candidateRegistrationFormsController",function($scope,$location,$rootScope,$window,$modal,candidateRegistrationDataService,usSpinnerService,$timeout,$cookies,gtGAService,gtStorageService,candidateRegistrationCurrencyMap,candidateRegistrationJobApplicationID,candidateRegistrationPath,companiesDataService,jobTitlesListService,candidatesCitiesService,currencyPreSelectService,visaAndNOCService){$scope.currencyMap=candidateRegistrationCurrencyMap;$scope.step={};$scope.submit=submit;$scope.form={};$scope.hasFriction=false;$scope.hasRememberMe=true;$scope.visaStatusHelper=visaAndNOCService.getVisaStatusHelper();$scope.getCompanyNames=companiesDataService.getCompanyNameSuggestions;$scope.getJobTitles=jobTitlesListService.search;$scope.setCities=setCities;$scope.hasNoCities=false;$scope.country="";candidateRegistrationDataService.get().then(function(candidateProfile){$scope.form=candidateProfile;$scope.rememberMeCookie=candidateProfile.remember_me;$scope.form.canloc_location_current=candidateProfile.canloc_location_current.toString();setCities();if(undefined!==$scope.form.driving_license){$scope.form.driving_license=Number(!!$scope.form.driving_license)}if(!$scope.form.driving_license){$scope.form.driving_license_country=""}if(0===candidateProfile.canloc_location_current){$modal.open({templateUrl:"current-location-form",controller:"candidateRegistrationLocationModalController"})}if(6===$scope.step.index){currencyPreSelectService.select($scope.form)}});$scope.$on("$routeChangeSuccess",function(event,routeData){$scope.step=routeData.$$route;if($scope.form&&$scope.step&&6===$scope.step.index){currencyPreSelectService.select($scope.form)}});if(gtStorageService.exists("video","watched")){gtGAService.trackEvent("Video",gtStorageService.getItem("video","watched"),"conversion")}$scope.skipThisStep=function(){clearLocationForSalary();$rootScope.$broadcast("gtSalary.infoModal:close")};function setCities(){var cities=candidatesCitiesService.getCities($scope.form.canloc_location_current);$scope.country=candidatesCitiesService.getCountryName($scope.form.canloc_location_current);if(cities){$scope.cities=cities;$scope.form.canloc_location_current_city="";$scope.hasNoCities=false}else{$scope.form.canloc_location_current_city="other";$scope.hasNoCities=true}}function submit(){var nextStep=$scope.step.next?$scope.step.next.templateUrl:null;$scope.hasFriction=true;candidateRegistrationDataService.update($scope.form).then(function(){var redirectURL="/register/"+candidateRegistrationPath+"/cv";if(null===nextStep){if("apply"===candidateRegistrationPath){redirectURL+="?job_id="+candidateRegistrationJobApplicationID}else if("salary"===candidateRegistrationPath){clearLocationForSalary();reloadPage("showRegMessage=true");return}$window.location.href=redirectURL}else{$location.path(nextStep)}$scope.hasFriction=false},function(){if(null!==nextStep){$location.path(nextStep)}})}function clearLocationForSalary(){$location.search("showSalaryModal",null);$location.replace()}function reloadPage(param){var locationSearch=$window.location.search,appendChar=locationSearch.startsWith("?")?"&":"?",searchParam=param||"",url=$window.location.pathname;if(searchParam){url+=appendChar+searchParam}$window.location.href=url}}).controller("candidateRegistrationLocationModalController",function($scope,$modalInstance,candidateRegistrationDataService,candidateRegistrationCountryList){$scope.submit=submit;$scope.countries=candidateRegistrationCountryList;$scope.form={};function submit(){candidateRegistrationDataService.update($scope.form).then(function(){$modalInstance.dismiss()},function(){$scope.errorMessage="There was an error updating your current location. Please try again."})}}).controller("candidateRegistrationStepOneController",function($scope,gtModal,$element,candidateRegistrationMailingOptionsValue,$rootScope,$timeout,$window){var mailingOptions=candidateRegistrationMailingOptionsValue,confirmationModalInstance,userAgent=$window.navigator.userAgent,isltIE11=0<userAgent.indexOf("MSIE"),isIE11=!!userAgent.match(/Trident.*rv[ :]*11\./);$scope.isIE=isltIE11||isIE11;$scope.form={MailingNewsPermission:mailingOptions.mailingNewsOption,MailingEventsPermission:mailingOptions.mailingEventsOption};$scope.isMailingPermissionCollapsed=true;$scope.isLoading=false;$scope.$on("gtFacebook.getUserData:triggered",function(evt,userFBInformation){$scope.form.firstname=userFBInformation.first_name;$scope.form.lastname=userFBInformation.last_name;$scope.form.email=userFBInformation.email;$scope.form.password="foobar";$scope.form.facebookID=userFBInformation.id});$scope.$on("candidateJobApply.mailingOptions:changed",function(){$scope.form.MailingNewsPermission=mailingOptions.mailingNewsOption;$scope.form.MailingEventsPermission=mailingOptions.mailingEventsOption});$scope.$watch("form.cv",function(newFile){$rootScope.$broadcast("uploadFile.CV:changed",newFile)});$scope.uploadFile=function(){$timeout(function(){angular.element(document.querySelector("#candidate_cv_file"))[0].click()})};$scope.submit=function(path){if("cv-review"===path){$scope.$apply(function(){confirmationModalInstance=gtModal.open({type:"confirm",templateName:"popupBox",title:"Please Confirm",message:"This is a one time service. "+"Make sure your CV is up-to-date before going ahead. Do you want to proceed?",windowClass:"modal-alert",actionLabel:{ok:"Proceed"}})});confirmationModalInstance.result.then(function(){$element[0].submit()})}else{$scope.$apply(function(){$scope.isLoading=true});$element[0].submit()}}}).controller("candidateRegistrationModalOptionsController",function($scope,candidateRegistrationMailingOptionsValue){$scope.isMailingPermissionCollapsed=true;$scope.mailingOptions=candidateRegistrationMailingOptionsValue;$scope.mailingOptions.mailingNewsOption=true;$scope.mailingOptions.mailingEventsOption=true}).value("candidateRegistrationMailingOptionsValue",{mailingNewsOption:true,mailingEventsOption:true}).factory("candidateRegistrationDataService",function($rootScope,$resource,$q,$window,candidateProfileDataService){var resultsResource=$resource("/api/candidates/me"),lastUpdate={};return{get:function(){var deferred=$q.defer();candidateProfileDataService.get().then(function(response){lastUpdate=angular.copy(response);deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise},update:function(formFields){var deferred=$q.defer(),parameters={},sendAsNullIfEmpty=["noc_requirement","visa_validity"];angular.forEach(formFields,function(value,key){if(lastUpdate[key]!==value&&"remember_me"!==key){parameters[key]=value}if(-1<sendAsNullIfEmpty.indexOf(key)&&""===value){parameters[key]=null}});resultsResource.save(parameters,function(response){angular.extend(lastUpdate,formFields);deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}}).directive("rememberMe",function(candidateRegistrationDataService,gtCookieService){return{require:"?ngModel",link:function(scope,element,attrs,ngModel){if(undefined===ngModel||!attrs.rememberMe){return}scope.$watch(watcher,listener,true);function watcher(){return{isEnabled:ngModel.$modelValue,details:scope.$eval(attrs.rememberMe)}}function listener(cookie){var sanitizedDateString,expiryDate;if(!cookie.details){return}sanitizedDateString=cookie.details.expiry.replace(/T.*/gi,"").replace(/[-]/g,"/");expiryDate=new Date(sanitizedDateString);if(cookie.isEnabled){gtCookieService.setCookie(cookie.details.name,cookie.details.value,expiryDate,cookie.details.path)}else{gtCookieService.setCookie(cookie.details.name,null,new Date,cookie.details.path)}}}}}).directive("gtSetIf",["$parse",function($parse){return{link:function(scope,element,attrs){var modelSetter=$parse(attrs.ngModel).assign;scope.$watch(attrs.gtSetIf,function(evaluatedValue){if(evaluatedValue){modelSetter(scope,attrs.gtSetIfDefault)}},true)}}}]).directive("gtSetLastIf",["$parse",function($parse){return{link:function(scope,element,attrs){var lastSavedValue="",modelGetter=$parse(attrs.ngModel),modelSetter=modelGetter.assign;scope.$watch(attrs.gtSetLastIf,function(evaluatedValue){if(true===evaluatedValue&&undefined!==lastSavedValue){modelSetter(scope,lastSavedValue);lastSavedValue=undefined}else if(false===evaluatedValue){lastSavedValue=modelGetter(scope);modelSetter(scope,attrs.gtSetLastIfDefault)}},true)}}}]).factory("currencyPreSelectService",function(countryCurrencyMap){return{select:function(form){if(""===form.currency&&"VISIT_TOURIST"!==form.visa_status&&countryCurrencyMap.hasOwnProperty(form.canloc_location_current)){form.currency=countryCurrencyMap[form.canloc_location_current]}}}}).value("countryCurrencyMap",{})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidates",["ngSanitize","GT.lib.log","GT.lib.ui","GT.app.widget","GT.lib.filters"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidates").factory("candidateProfileDataService",function($resource,$q){var candidateResource=$resource("/api/candidates/me"),profileData={};return{makeProfilePublic:function(){var deferred=$q.defer();$resource("/api/candidates/me?version=2").save({settings:{profile_search_permission:"PUBLIC"}},function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise},get:function(mode){var deferred=$q.defer();candidateResource.get({mode:mode?mode:"full"},function(response){var defaults={canloc_nationality1:"",canloc_nationality2:"",canloc_location_current:"",canloc_location_current_city:"",canloc_address_country:"",periodcursalary:"per month",housing_allowance_period:"per month",transport_allowance_period:"per month",periodcurbenefits:"per month",industry:"",exp_yrs:"",canloc_location_pref1:"",canloc_location_pref2:"",canloc_location_pref3:"",periodexpsalary:"per month",canloc_workpermit:"",arabic_fluency:"",emailtypemain:"",emailtypesecond:"",mobility:"",ready_travel:"",jobcat_first:"",jobcat_second:"",jobcat_third:"",indus_first:"",indus_second:"",indus_third:"",other_benefit:""},candidateProfile=response[mode?mode:"full"];angular.forEach(defaults,function(value,key){if(!candidateProfile[key]){candidateProfile[key]=value}});deferred.resolve(candidateProfile)},function(error){deferred.reject(error)});return deferred.promise},set:function(data){profileData=data},update:function(){var deferred=$q.defer();candidateResource.save({version:2},profileData,function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}}).factory("candidateCvCompletenessService",function($rootScope,$resource,$q){var cvCompletenessResource=$resource("/api/candidates/me/cv/percentage-complete");return{get:function(){var deferred=$q.defer();cvCompletenessResource.get({},function(response){$rootScope.$broadcast("candidate.cvCompleteness:loaded",{percentageComplete:response.percentage_complete,percentileResult:response.percentile_result});deferred.resolve(response.percentage_complete)});return deferred.promise}}}).factory("candidatesCitiesService",function(candidatesCountryList,candidatesCountryCityMap,$resource,$q){var locationResource=$resource("/api/locations/names");return{getCities:function(countryCode){var countryWithCities=candidatesCountryCityMap.country[countryCode],cities="";if(countryWithCities){cities=candidatesCountryCityMap.city[countryWithCities];cities.other="Other"}return cities},getCountryName:function(countryCode){return candidatesCountryList[countryCode]},getLocationsName:function(locationCodes){var deferred=$q.defer();locationResource.get({location_codes:locationCodes},function(response){deferred.resolve(response)},function(error){deferred.reject(error)});return deferred.promise}}}).value("candidatesCountryList",{}).value("candidatesCountryCityMap",{country:{},city:{}}).factory("candidatesLocationService",function(){return{isInRegion:function(regionCode,countryCode){var countryRegionCode=countryCode.substr(0,7);if(countryRegionCode===regionCode){return true}return false}}}).directive("candidatesVisaStatusUpdate",function(candidatesLocationService){return{restrict:"A",scope:true,link:function($scope,element,attrs){var regionCode=attrs.candidatesVisaStatusUpdateRegionCode,visaStatusList=element[0].querySelector("#candidate_visa_status"),index=0;$scope.$parent.isVisaStatusVisible=true;for(index;index<visaStatusList.length;index++){if(-1<$scope.$parent.visaStatusHelper.visaNotRequired.indexOf(visaStatusList[index].value)){angular.element(visaStatusList[index]).addClass("hide")}}if(-1<["CITIZEN","NOT_APPLICABLE"].indexOf($scope.$parent.form.visa_status)){$scope.$parent.isVisaStatusVisible=false}$scope.$watch(function(){return{currentLocation:attrs.candidatesVisaStatusUpdateCurrentLocation,nationality1:attrs.candidatesVisaStatusUpdateNationalityOne,nationality2:attrs.candidatesVisaStatusUpdateNationalityTwo}},updateVisaStatus,true);function updateVisaStatus(newValues,oldValues){var isCurrentLocationInGCC=candidatesLocationService.isInRegion(regionCode,newValues.currentLocation),isNationalityOneInGCC,isNationalityTwoInGCC,selectedSingleNationality,isSingleNationalityInGCC;if(JSON.stringify(newValues)===JSON.stringify(oldValues)){return}if(!newValues.currentLocation||!newValues.nationality1&&!newValues.nationality2){$scope.$parent.isVisaStatusVisible=false;return}if(!newValues.nationality1||!newValues.nationality2){selectedSingleNationality=newValues.nationality1?newValues.nationality1:newValues.nationality2;isSingleNationalityInGCC=candidatesLocationService.isInRegion(regionCode,selectedSingleNationality);switch(true){case isCurrentLocationInGCC&&!isSingleNationalityInGCC:$scope.$parent.form.visa_status="";$scope.$parent.isVisaStatusVisible=true;break;case newValues.currentLocation===selectedSingleNationality:$scope.$parent.isVisaStatusVisible=false;$scope.$parent.form.visa_status="CITIZEN";break;default:$scope.$parent.isVisaStatusVisible=false;$scope.$parent.form.visa_status="NOT_APPLICABLE";break}}else{isNationalityOneInGCC=candidatesLocationService.isInRegion(regionCode,newValues.nationality1);isNationalityTwoInGCC=candidatesLocationService.isInRegion(regionCode,newValues.nationality2);twoNationalitiesVisaStatusHandler(isCurrentLocationInGCC,isNationalityOneInGCC,isNationalityTwoInGCC,newValues.currentLocation,newValues.nationality1,newValues.nationality2)}}function twoNationalitiesVisaStatusHandler(isCurrentLocationInGCC,isNationalityOneInGCC,isNationalityTwoInGCC,currentLocation,nationality1,nationality2){switch(true){case currentLocation===nationality1||currentLocation===nationality2:$scope.$parent.isVisaStatusVisible=false;$scope.$parent.form.visa_status="CITIZEN";break;case(isNationalityOneInGCC||isNationalityTwoInGCC)&&isCurrentLocationInGCC||(!isNationalityOneInGCC||!isNationalityTwoInGCC)&&!isCurrentLocationInGCC:$scope.$parent.isVisaStatusVisible=false;$scope.$parent.form.visa_status="NOT_APPLICABLE";break;default:$scope.$parent.form.visa_status="";$scope.$parent.isVisaStatusVisible=true;break}}}}}).value("parsedCvData",false).factory("parsedCvService",function(parsedCvData){var sectionFieldsMappings={personal_info:{firstname:true,surname:true,dob:true,age:true,p_marital:true,phone1:true,mnumtype:true,phone2:true,snumtype:true,phone3:true,tnumtype:true,canloc_nationality1:true,canlocNationality1Name:true,canloc_nationality2:true,canlocNationality2Name:true,currCity:true,currLocation:true,city_other:true},work_experience:true,education:true,professional_skill:true,it_skill:true,language_skill:true,references:true,comments:true};return{getCvParsedFields:function(sectionId,dbValues){var fieldName;if(!parsedCvData||!sectionFieldsMappings[sectionId]){return dbValues}for(fieldName in sectionFieldsMappings[sectionId]){if(undefined===dbValues[fieldName]||null===dbValues[fieldName]||!dbValues[fieldName]||"0000-00-00"===dbValues[fieldName]){dbValues[fieldName]=parsedCvData[sectionId][fieldName]}}return dbValues},getCvParsedSection:function(sectionId,dbValues){var parsedCvValues;if(!parsedCvData||!sectionFieldsMappings[sectionId]||dbValues.length){return dbValues}parsedCvValues=parsedCvData[sectionId]||[];return parsedCvValues}}}).value("showMissingFields",false).value("cvBuilderShowAdditionalProfileFields",false).factory("missingCvFieldsService",function(showMissingFields,$q,cvBuilderShowAdditionalProfileFields,visaAndNOCService){var sectionsChecks={personal_info:{firstname:true,surname:true,dob:function(data){return!data.dob||"0000-00-00"===data.dob},canlocNationality1Name:true,location:function(data){return!data.currLocation||!(data.currCity||data.city_other)},phone1:true},work_experience:{job_title:true,company_name:true,location:function(data){return!data.city||!data.country},timePeriod:function(data){return!data.timeSpan.startMonth||!data.timeSpan.startYear||!data.timeSpan.endMonth||!("Present"===data.timeSpan.endMonth||data.timeSpan.endYear)},description:true},education:{university:true,degree_level:true,subject:true,location:function(data){return!data.province||!data.country},timePeriod:function(data){return!data.timeSpan.startMonth||!data.timeSpan.startYear||!data.timeSpan.endMonth||!("Present"===data.timeSpan.endMonth||data.timeSpan.endYear)}},professional_skill:{certificate:true,issuer:true,country:true,year:true},it_skill:{topic:true,type:true,level:true},language_skill:{language:true,level:true},references:{name:true,company:true,position:true,relationship:true}},sectionsMissingData={},sectionsToCheck=Object.keys(sectionsChecks),deferred=$q.defer();if(cvBuilderShowAdditionalProfileFields){sectionsChecks.personal_info.gender=true;sectionsChecks.personal_info.visa_status=function(data){return visaAndNOCService.isVisaStatusVisible(data.visa_status)&&(!data.visa_status||!data.visa_validity||data.visa_status===visaAndNOCService.getVisaStatusHelper.nocRequired&&!data.noc_requirement)}}return{checkForMissingFields:function(sectionId,data,index){var check,checkResults={};markSectionAsChecked(sectionId);if(!showMissingFields||!sectionsChecks[sectionId]){resolvePromiseIfAllChecked();return checkResults}for(check in sectionsChecks[sectionId]){if("function"===typeof sectionsChecks[sectionId][check]){checkResults[check]=sectionsChecks[sectionId][check](data)}else{checkResults[check]=!data[check]}}if(undefined===sectionsMissingData[sectionId]){sectionsMissingData[sectionId]={}}sectionsMissingData[sectionId][index||0]=!!Object.keys(checkResults).reduce(function(previous,key){return previous+checkResults[key]+0},0);if(!sectionsMissingData[sectionId][index||0]){delete sectionsMissingData[sectionId][index||0]}resolvePromiseIfAllChecked();return checkResults},getSectionsMissingData:function(){return deferred.promise},markSectionAsChecked:function(sectionId){markSectionAsChecked(sectionId)}};function markSectionAsChecked(sectionId){if(-1!==sectionsToCheck.indexOf(sectionId)){sectionsToCheck.splice(sectionsToCheck.indexOf(sectionId),1)}}function resolvePromiseIfAllChecked(){if(0===sectionsToCheck.length){deferred.resolve(sectionsMissingData)}}}).factory("visaAndNOCService",function(){var visaStatusHelper={visaNotRequired:["CITIZEN","NOT_APPLICABLE"],nocRequired:"RESIDENCE_EMPLOYMENT"};return{getVisaStatusHelper:function(){return visaStatusHelper},isNOCRequired:function(visaStatus){if(visaStatus!==visaStatusHelper.nocRequired){return false}return true},isVisaStatusVisible:function(visaStatus){return-1===visaStatusHelper.visaNotRequired.indexOf(visaStatus)}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidateBookmarks",["ngResource","GT.lib.bridge","GT.lib.ui","GT.app.widget"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.candidateBookmarks").value("candidateBookmarksSavedJobsList",[]).controller("candidateBookmarksSavedJobsController",function($scope,candidateBookmarksSavedJobsList,candidateBookmarksService,flashBag){$scope.candidateSavedJobsList=candidateBookmarksSavedJobsList;$scope.isExpired=function(savedJob){return!("LIVE"===savedJob.job.status||"LIVE_APPROVED"===savedJob.job.status)};$scope.remove=function(index){var item=$scope.candidateSavedJobsList[index];candidateBookmarksService.removeBookmark(item.job.job_id).then(function(){$scope.candidateSavedJobsList.splice(index,1);flashBag.add("success","The saved job was successfully removed!")},function(){flashBag.add("error","The saved job couldn't be removed, try again later!")})}}).constant("bookmarksBackendExceptions",{logicalExceptions:{3010:"Bookmark already exists.",3020:"Bookmark doesn't exists."}}).directive("gtCandidateBookmarkJob",function(candidateBookmarksService,bookmarksBackendExceptions,flashBag){return{restrict:"A",scope:{},templateUrl:"template/candidate/gt-bookmark-job.html",link:function(scope,element,attrs){var jobId=attrs.gtCandidateBookmarkJob||-1,bookmarkOn=attrs.gtCandidateBookmarkOn;initScope();element.bind("click",function(){var action=scope.isBookmarked?"removeBookmark":"saveBookmark";if(scope.isBusy){return}setBusy(true);scope.isBookmarked=!scope.isBookmarked;candidateBookmarksService[action](jobId).then(onUpdateSuccess,onUpdateFailure)});function initScope(){scope.isBookmarked="true"===bookmarkOn;if(undefined===bookmarkOn){scope.isBusy=true;candidateBookmarksService.getBookmark(jobId).then(function(data){scope.isBookmarked=0<data.bookmarks.length;setBusy(false)},function(){setBusy(false)})}}function setBusy(busy){scope.isBusy=busy}function onUpdateSuccess(){setBusy(false)}function onUpdateFailure(error){if(!(error.data.code in bookmarksBackendExceptions.logicalExceptions)){scope.isBookmarked=!scope.isBookmarked;flashBag.add("error","The bookmark action couldn't finish, try again later!")}setBusy(false)}}}}).run(function($templateCache){$templateCache.put("template/candidate/gt-bookmark-job.html",'<span class="text-supermuted" ng-show="!isBookmarked">Save job</span>\n'+'<span class="text-supermuted" ng-show="isBookmarked">Job saved (Click to unsave)</span>\n'+"<a ng-class=\"{'bookmark-on': isBookmarked, 'bookmark-off': !isBookmarked}\">\n"+'<i class="fa fa-fw fa-star fa-lg"></i>\n'+"</a>")}).factory("candidateBookmarksService",function($resource,gtPromiseService){var listResource=$resource("/api/candidates/me/saved-jobs"),itemResource=$resource("/api/candidates/me/saved-jobs/:id",{id:"@id"},{remove:{method:"POST",params:{_method:"DELETE"}}});return{saveBookmark:function(jobId){var params={job_id:jobId};return gtPromiseService.wrapResourceCall(listResource,"save",params)},removeBookmark:function(jobId){var params={id:jobId};return gtPromiseService.wrapResourceCall(itemResource,"remove",params)},getBookmark:function(jobId){var params={id:jobId};return gtPromiseService.wrapResourceCall(itemResource,"get",params)},getAllBookmarks:function(){return gtPromiseService.wrapResourceCall(listResource,"get",{})}}})})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.cvReview",["GT.lib.bridge","GT.app","GT.app.candidates","GT.lib.ads","angularFileUpload"])})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.cvReview").value("cvReviewMinimumCompleteness",40).controller("cvReviewCvUploadModalController",function($scope,$rootScope,$window,$timeout,gtFileUploadService){$scope.msgError="";$scope.$on("uploadFile.CV:changed",function(evt,data){$scope.cvFile=data});$scope.submit=function(){$scope.msgError="";gtFileUploadService.postFile($scope.cvFile,"/api/candidates/uploaded-cvs/only").success(function(){$rootScope.$broadcast("cvUpload:success");$scope.msgSuccess="Your CV has been uploaded succesfully";$timeout(function(){$scope.$emit("staticModal:close")},3e3)}).error(function(err){if(undefined!==err&&undefined!==err.message){$scope.msgError=err.message}else{$scope.msgError="There was problem in uploading your CV, please try again"}})}}).controller("cvReviewFormController",function($rootScope,$scope,$q,$window,flashBag,gtModal,candidateCvCompletenessService,cvReviewMinimumCompleteness,cvReviewDataService,cvReviewRequestService,cvReviewHasCvTypeOptions){$scope.$on("cvUpload:success",function(){$scope.isCvUploaded=true});candidateCvCompletenessService.get();$scope.$on("candidate.cvCompleteness:loaded",function(evt,progress){$scope.cvCompleteness=progress.percentageComplete});$scope.submit=function(){cvReviewDataService.get().then(function(response){var cvData=response.data.cv;if($scope.isCvUploaded&&cvReviewHasCvTypeOptions){requestCvReview(cvData.cv_id,$scope.isPage,$scope.originPath,$scope.cvType);return}if($scope.cvCompleteness<cvReviewMinimumCompleteness){flashBag.save("cv-review-update",$scope.cvCompleteness).then(redirectToCvEdit,redirectToCvEdit)}else{requestCvReview(cvData.cv_id,$scope.isPage,$scope.originPath,$scope.cvType)}},function(){addFlashAndDismiss("error","There was an error processing your request, please try again later.",$scope.isPage)})};function requestCvReview(cvId,isPage,originPath,cvType){var modalInstance=gtModal.open({type:"confirm",templateName:"popupBox",title:"Please Confirm",message:"This is a one time service. "+"Make sure your CV is up-to-date before going ahead. Do you want to proceed?",windowClass:"modal-alert",actionLabel:{ok:"Proceed"}});modalInstance.result.then(function(){cvReviewRequestService.update(cvId,originPath,$scope.cvTypeUploaded===cvType).then(function(){addFlashAndReload("cv-review-success",isPage)},function(err){if("400"===err.data.code){addFlashAndDismiss("error","There is something wrong with your account details. "+"Please update your profile and try again.","","",isPage)}else if("409"===err.data.code){addFlashAndReload("cv-review-duplicate",isPage)}else{addFlashAndDismiss("error","There was an error processing your request, please try again later.","","",isPage)}})})}function addFlashAndReload(messageKey,isPage){if(isPage){flashBag.save(messageKey).then(redirectToCvReviewConfirmation,redirectToCvReviewConfirmation)}else if("dashboard"===$scope.originPath){flashBag.save(messageKey).then(redirectToDashboard,redirectToDashboard)}else{flashBag.save(messageKey).then(redirectToCvEdit,redirectToCvEdit)}}function addFlashAndDismiss(type,message,link,linkText,isPage){flashBag.add(type,message,false,link,linkText);if(!isPage){$scope.$emit("staticModal:close")}}function redirectToDashboard(){$window.location.href="/candidates/workspace"}function redirectToCvEdit(){$window.location.href="/candidates/edit-cv/cv-review"}function redirectToCvReviewConfirmation(){$window.location.href="/resources/job-search-support/free-cv-review-confirmation"}}).factory("cvReviewRequestService",function($q,$resource){var cvReviewResource=$resource("/api/candidates/me/cvs/:id/reviews",{id:"@id"},{update:{method:"POST"}});return{update:function(cvId,originPath,sendUploadedCv){var deferred=$q.defer(),params={id:cvId},postData={provider:"cvnow",path:originPath||"unknown",send_uploaded_cv:sendUploadedCv};cvReviewResource.update(params,postData,function(response){deferred.resolve(response)},function(err){deferred.reject(err)});return deferred.promise}}}).factory("cvReviewDataService",function($http){return{get:function(){return $http.get("/api/candidates/me/cvs/only")}}}).value("cvReviewHasCvTypeOptions",true)})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.companies",[]).controller("companyJobsController",function($scope,companiesJobs,gtPaginatorService,companiesJobsPerPage,companiesJobsCurrentPage){$scope.paginator=gtPaginatorService.create({pageSize:companiesJobsPerPage,windowSize:4,results:companiesJobs,currentPage:companiesJobsCurrentPage})}).value("companiesJobs",[]).value("companiesJobsPerPage",5).value("companiesJobsCurrentPage",1)})(window,window.angular);
(function(window,angular,undefined){"use strict";angular.module("GT.app.companies").factory("companiesDataService",function($http){return{getCompanyNameSuggestions:function(search){return $http.get("/api/companies/suggested-names",{params:{search:search}}).then(function(response){return true===response.data.success?response.data.company_names:[]},function(){return[]})}}})})(window,window.angular);